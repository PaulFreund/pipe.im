/*

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/ 

module derelict.purple.smiley;

import derelict.glib.gtypes;
import derelict.glib.glibconfig;
import derelict.glib.glist;
import derelict.purple.imgstore;

extern (C):

alias _PurpleSmiley PurpleSmiley;
alias _PurpleSmileyClass PurpleSmileyClass;

struct _PurpleSmiley;


struct _PurpleSmileyClass;


extern( C ) nothrow 
{
	alias da_purple_smiley_get_type = GType function();																		
    alias da_purple_smiley_new = PurpleSmiley* function(PurpleStoredImage* img, const(char)* shortcut);						
    alias da_purple_smiley_new_from_file = PurpleSmiley* function(const(char)* shortcut, const(char)* filepath);			
    alias da_purple_smiley_delete = void function(PurpleSmiley* smiley);													
    alias da_purple_smiley_set_shortcut = gboolean function(PurpleSmiley* smiley, const(char)* shortcut);					
    alias da_purple_smiley_set_data = void function(PurpleSmiley* smiley, guchar* smiley_data, size_t smiley_data_len);		
    alias da_purple_smiley_get_shortcut = const(char)* function(const(PurpleSmiley)* smiley);								
    alias da_purple_smiley_get_checksum = const(char)* function(const(PurpleSmiley)* smiley);								
    alias da_purple_smiley_get_stored_image = PurpleStoredImage* function(const(PurpleSmiley)* smiley);						
    alias da_purple_smiley_get_data = gconstpointer function(const(PurpleSmiley)* smiley, size_t* len);						
    alias da_purple_smiley_get_extension = const(char)* function(const(PurpleSmiley)* smiley);								
    alias da_purple_smiley_get_full_path = char* function(PurpleSmiley* smiley);											
    alias da_purple_smileys_get_all = GList* function();																	
    alias da_purple_smileys_find_by_shortcut = PurpleSmiley* function(const(char)* shortcut);								
    alias da_purple_smileys_find_by_checksum = PurpleSmiley* function(const(char)* checksum);								
    alias da_purple_smileys_get_storing_dir = const(char)* function();														
    alias da_purple_smileys_init = void function();																			
    alias da_purple_smileys_uninit = void function();		
}

__gshared
{
	da_purple_smiley_get_type purple_smiley_get_type;
	da_purple_smiley_new purple_smiley_new;
	da_purple_smiley_new_from_file purple_smiley_new_from_file;
	da_purple_smiley_delete purple_smiley_delete;
	da_purple_smiley_set_shortcut purple_smiley_set_shortcut;
	da_purple_smiley_set_data purple_smiley_set_data;
	da_purple_smiley_get_shortcut purple_smiley_get_shortcut;
	da_purple_smiley_get_checksum purple_smiley_get_checksum;
	da_purple_smiley_get_stored_image purple_smiley_get_stored_image;
	da_purple_smiley_get_data purple_smiley_get_data;
	da_purple_smiley_get_extension purple_smiley_get_extension;
	da_purple_smiley_get_full_path purple_smiley_get_full_path;
	da_purple_smileys_get_all purple_smileys_get_all;
	da_purple_smileys_find_by_shortcut purple_smileys_find_by_shortcut;
	da_purple_smileys_find_by_checksum purple_smileys_find_by_checksum;
	da_purple_smileys_get_storing_dir purple_smileys_get_storing_dir;
	da_purple_smileys_init purple_smileys_init;
	da_purple_smileys_uninit purple_smileys_uninit;
}