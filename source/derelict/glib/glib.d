/*

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/

module derelict.glib.glib;

public 
{
	import derelict.glib.glibconfig;
	import derelict.glib.garray;
	import derelict.glib.gasyncqueue;
	import derelict.glib.gatomic;
	import derelict.glib.gbacktrace;
	import derelict.glib.gbase64;
	import derelict.glib.gbitlock;
	import derelict.glib.gbookmarkfile;
	import derelict.glib.gbytes;
	import derelict.glib.gcharset;
	import derelict.glib.gchecksum;
	import derelict.glib.gconvert;
	import derelict.glib.gdataset;
	import derelict.glib.gdate;
	import derelict.glib.gdatetime;
	import derelict.glib.gdir;
	import derelict.glib.genviron;
	import derelict.glib.gerror;
	import derelict.glib.gfileutils;
	import derelict.glib.ggettext;
	import derelict.glib.ghash;
	import derelict.glib.ghmac;
	import derelict.glib.ghook;
	import derelict.glib.ghostutils;
	import derelict.glib.giochannel;
	import derelict.glib.gkeyfile;
	import derelict.glib.glist;
	import derelict.glib.gmain;
	import derelict.glib.gmappedfile;
	import derelict.glib.gmarkup;
	import derelict.glib.gmem;
	import derelict.glib.gmessages;
	import derelict.glib.gnode;
	import derelict.glib.goption;
	import derelict.glib.gpattern;
	import derelict.glib.gpoll;
	import derelict.glib.gprimes;
	import derelict.glib.gprintf;
	import derelict.glib.gqsort;
	import derelict.glib.gquark;
	import derelict.glib.gqueue;
	import derelict.glib.grand;
	import derelict.glib.gregex;
	import derelict.glib.gscanner;
	import derelict.glib.gsequence;
	import derelict.glib.gshell;
	import derelict.glib.gslice;
	import derelict.glib.gslist;
	import derelict.glib.gspawn;
	import derelict.glib.gstdio;
	import derelict.glib.gstrfuncs;
	import derelict.glib.gstring;
	import derelict.glib.gstringchunk;
	import derelict.glib.gtestutils;
	import derelict.glib.gthread;
	import derelict.glib.gthreadpool;
	import derelict.glib.gtimer;
	import derelict.glib.gtimezone;
	import derelict.glib.gtrashstack;
	import derelict.glib.gtree;
	import derelict.glib.gtypes;
	import derelict.glib.gunicode;
	import derelict.glib.gurifuncs;
	import derelict.glib.gutils;
	import derelict.glib.gvarianttype;
	import derelict.glib.gvariant;
	import derelict.glib.gversion;
}

private 
{
	import derelict.util.loader;
	import derelict.util.system;

	static if(Derelict_OS_Windows)
		enum libNames = "libglib-2.0-0.dll";
	else static if(Derelict_OS_Mac)
		enum libNames = "libglib-2.0.dylib";
	else static if(Derelict_OS_Posix)
		enum libNames = "libglib-2.0.so";
	else
		static assert(0, "Need to implement glib-2.0 libNames for this operating system.");
}

class DerelictGlibLoader : SharedLibLoader 
{
	public this() 
	{
		super(libNames);
	}

	protected override void loadSymbols() 
	{
		bindFunc(cast(void**)&g_access, "g_access");
		bindFunc(cast(void**)&g_array_append_vals, "g_array_append_vals");
		bindFunc(cast(void**)&g_array_free, "g_array_free");
		bindFunc(cast(void**)&g_array_get_element_size, "g_array_get_element_size");
		bindFunc(cast(void**)&g_array_insert_vals, "g_array_insert_vals");
		bindFunc(cast(void**)&g_array_new, "g_array_new");
		bindFunc(cast(void**)&g_array_prepend_vals, "g_array_prepend_vals");
		bindFunc(cast(void**)&g_array_ref, "g_array_ref");
		bindFunc(cast(void**)&g_array_remove_index, "g_array_remove_index");
		bindFunc(cast(void**)&g_array_remove_index_fast, "g_array_remove_index_fast");
		bindFunc(cast(void**)&g_array_remove_range, "g_array_remove_range");
		bindFunc(cast(void**)&g_array_set_clear_func, "g_array_set_clear_func");
		bindFunc(cast(void**)&g_array_set_size, "g_array_set_size");
		bindFunc(cast(void**)&g_array_sized_new, "g_array_sized_new");
		bindFunc(cast(void**)&g_array_sort, "g_array_sort");
		bindFunc(cast(void**)&g_array_sort_with_data, "g_array_sort_with_data");
		bindFunc(cast(void**)&g_array_unref, "g_array_unref");
		bindFunc(cast(void**)&g_ascii_digit_value, "g_ascii_digit_value");
		bindFunc(cast(void**)&g_ascii_dtostr, "g_ascii_dtostr");
		bindFunc(cast(void**)&g_ascii_formatd, "g_ascii_formatd");
		bindFunc(cast(void**)&g_ascii_strcasecmp, "g_ascii_strcasecmp");
		bindFunc(cast(void**)&g_ascii_strdown, "g_ascii_strdown");
		bindFunc(cast(void**)&g_ascii_strncasecmp, "g_ascii_strncasecmp");
		bindFunc(cast(void**)&g_ascii_strtod, "g_ascii_strtod");
		bindFunc(cast(void**)&g_ascii_strtoll, "g_ascii_strtoll");
		bindFunc(cast(void**)&g_ascii_strtoull, "g_ascii_strtoull");
		bindFunc(cast(void**)&g_ascii_strup, "g_ascii_strup");
		bindFunc(cast(void**)&g_ascii_table, "g_ascii_table");
		bindFunc(cast(void**)&g_ascii_tolower, "g_ascii_tolower");
		bindFunc(cast(void**)&g_ascii_toupper, "g_ascii_toupper");
		bindFunc(cast(void**)&g_ascii_xdigit_value, "g_ascii_xdigit_value");
		bindFunc(cast(void**)&g_assert_warning, "g_assert_warning");
		bindFunc(cast(void**)&g_assertion_message, "g_assertion_message");
		bindFunc(cast(void**)&g_assertion_message_cmpnum, "g_assertion_message_cmpnum");
		bindFunc(cast(void**)&g_assertion_message_cmpstr, "g_assertion_message_cmpstr");
		bindFunc(cast(void**)&g_assertion_message_error, "g_assertion_message_error");
		bindFunc(cast(void**)&g_assertion_message_expr, "g_assertion_message_expr");
		bindFunc(cast(void**)&g_async_queue_length, "g_async_queue_length");
		bindFunc(cast(void**)&g_async_queue_length_unlocked, "g_async_queue_length_unlocked");
		bindFunc(cast(void**)&g_async_queue_lock, "g_async_queue_lock");
		bindFunc(cast(void**)&g_async_queue_new, "g_async_queue_new");
		bindFunc(cast(void**)&g_async_queue_new_full, "g_async_queue_new_full");
		bindFunc(cast(void**)&g_async_queue_pop, "g_async_queue_pop");
		bindFunc(cast(void**)&g_async_queue_pop_unlocked, "g_async_queue_pop_unlocked");
		bindFunc(cast(void**)&g_async_queue_push, "g_async_queue_push");
		bindFunc(cast(void**)&g_async_queue_push_sorted, "g_async_queue_push_sorted");
		bindFunc(cast(void**)&g_async_queue_push_sorted_unlocked, "g_async_queue_push_sorted_unlocked");
		bindFunc(cast(void**)&g_async_queue_push_unlocked, "g_async_queue_push_unlocked");
		bindFunc(cast(void**)&g_async_queue_ref, "g_async_queue_ref");
		bindFunc(cast(void**)&g_async_queue_ref_unlocked, "g_async_queue_ref_unlocked");
		bindFunc(cast(void**)&g_async_queue_sort, "g_async_queue_sort");
		bindFunc(cast(void**)&g_async_queue_sort_unlocked, "g_async_queue_sort_unlocked");
		bindFunc(cast(void**)&g_async_queue_timed_pop, "g_async_queue_timed_pop");
		bindFunc(cast(void**)&g_async_queue_timed_pop_unlocked, "g_async_queue_timed_pop_unlocked");
		bindFunc(cast(void**)&g_async_queue_timeout_pop, "g_async_queue_timeout_pop");
		bindFunc(cast(void**)&g_async_queue_timeout_pop_unlocked, "g_async_queue_timeout_pop_unlocked");
		bindFunc(cast(void**)&g_async_queue_try_pop, "g_async_queue_try_pop");
		bindFunc(cast(void**)&g_async_queue_try_pop_unlocked, "g_async_queue_try_pop_unlocked");
		bindFunc(cast(void**)&g_async_queue_unlock, "g_async_queue_unlock");
		bindFunc(cast(void**)&g_async_queue_unref, "g_async_queue_unref");
		bindFunc(cast(void**)&g_async_queue_unref_and_unlock, "g_async_queue_unref_and_unlock");
		bindFunc(cast(void**)&g_atexit, "g_atexit");
		bindFunc(cast(void**)&g_atomic_int_add, "g_atomic_int_add");
		bindFunc(cast(void**)&g_atomic_int_and, "g_atomic_int_and");
		bindFunc(cast(void**)&g_atomic_int_compare_and_exchange, "g_atomic_int_compare_and_exchange");
		bindFunc(cast(void**)&g_atomic_int_dec_and_test, "g_atomic_int_dec_and_test");
		bindFunc(cast(void**)&g_atomic_int_exchange_and_add, "g_atomic_int_exchange_and_add");
		bindFunc(cast(void**)&g_atomic_int_get, "g_atomic_int_get");
		bindFunc(cast(void**)&g_atomic_int_inc, "g_atomic_int_inc");
		bindFunc(cast(void**)&g_atomic_int_or, "g_atomic_int_or");
		bindFunc(cast(void**)&g_atomic_int_set, "g_atomic_int_set");
		bindFunc(cast(void**)&g_atomic_int_xor, "g_atomic_int_xor");
		bindFunc(cast(void**)&g_atomic_pointer_add, "g_atomic_pointer_add");
		bindFunc(cast(void**)&g_atomic_pointer_and, "g_atomic_pointer_and");
		bindFunc(cast(void**)&g_atomic_pointer_compare_and_exchange, "g_atomic_pointer_compare_and_exchange");
		bindFunc(cast(void**)&g_atomic_pointer_get, "g_atomic_pointer_get");
		bindFunc(cast(void**)&g_atomic_pointer_or, "g_atomic_pointer_or");
		bindFunc(cast(void**)&g_atomic_pointer_set, "g_atomic_pointer_set");
		bindFunc(cast(void**)&g_atomic_pointer_xor, "g_atomic_pointer_xor");
		bindFunc(cast(void**)&g_base64_decode, "g_base64_decode");
		bindFunc(cast(void**)&g_base64_decode_inplace, "g_base64_decode_inplace");
		bindFunc(cast(void**)&g_base64_decode_step, "g_base64_decode_step");
		bindFunc(cast(void**)&g_base64_encode, "g_base64_encode");
		bindFunc(cast(void**)&g_base64_encode_close, "g_base64_encode_close");
		bindFunc(cast(void**)&g_base64_encode_step, "g_base64_encode_step");
		bindFunc(cast(void**)&g_basename, "g_basename");
		bindFunc(cast(void**)&g_bit_lock, "g_bit_lock");
		bindFunc(cast(void**)&g_bit_nth_lsf, "g_bit_nth_lsf");
		bindFunc(cast(void**)&g_bit_nth_msf, "g_bit_nth_msf");
		bindFunc(cast(void**)&g_bit_storage, "g_bit_storage");
		bindFunc(cast(void**)&g_bit_trylock, "g_bit_trylock");
		bindFunc(cast(void**)&g_bit_unlock, "g_bit_unlock");
		bindFunc(cast(void**)&g_bookmark_file_add_application, "g_bookmark_file_add_application");
		bindFunc(cast(void**)&g_bookmark_file_add_group, "g_bookmark_file_add_group");
		bindFunc(cast(void**)&g_bookmark_file_error_quark, "g_bookmark_file_error_quark");
		bindFunc(cast(void**)&g_bookmark_file_free, "g_bookmark_file_free");
		bindFunc(cast(void**)&g_bookmark_file_get_added, "g_bookmark_file_get_added");
		bindFunc(cast(void**)&g_bookmark_file_get_app_info, "g_bookmark_file_get_app_info");
		bindFunc(cast(void**)&g_bookmark_file_get_applications, "g_bookmark_file_get_applications");
		bindFunc(cast(void**)&g_bookmark_file_get_description, "g_bookmark_file_get_description");
		bindFunc(cast(void**)&g_bookmark_file_get_groups, "g_bookmark_file_get_groups");
		bindFunc(cast(void**)&g_bookmark_file_get_icon, "g_bookmark_file_get_icon");
		bindFunc(cast(void**)&g_bookmark_file_get_is_private, "g_bookmark_file_get_is_private");
		bindFunc(cast(void**)&g_bookmark_file_get_mime_type, "g_bookmark_file_get_mime_type");
		bindFunc(cast(void**)&g_bookmark_file_get_modified, "g_bookmark_file_get_modified");
		bindFunc(cast(void**)&g_bookmark_file_get_size, "g_bookmark_file_get_size");
		bindFunc(cast(void**)&g_bookmark_file_get_title, "g_bookmark_file_get_title");
		bindFunc(cast(void**)&g_bookmark_file_get_uris, "g_bookmark_file_get_uris");
		bindFunc(cast(void**)&g_bookmark_file_get_visited, "g_bookmark_file_get_visited");
		bindFunc(cast(void**)&g_bookmark_file_has_application, "g_bookmark_file_has_application");
		bindFunc(cast(void**)&g_bookmark_file_has_group, "g_bookmark_file_has_group");
		bindFunc(cast(void**)&g_bookmark_file_has_item, "g_bookmark_file_has_item");
		bindFunc(cast(void**)&g_bookmark_file_load_from_data, "g_bookmark_file_load_from_data");
		bindFunc(cast(void**)&g_bookmark_file_load_from_data_dirs, "g_bookmark_file_load_from_data_dirs");
		bindFunc(cast(void**)&g_bookmark_file_load_from_file, "g_bookmark_file_load_from_file");
		bindFunc(cast(void**)&g_bookmark_file_move_item, "g_bookmark_file_move_item");
		bindFunc(cast(void**)&g_bookmark_file_new, "g_bookmark_file_new");
		bindFunc(cast(void**)&g_bookmark_file_remove_application, "g_bookmark_file_remove_application");
		bindFunc(cast(void**)&g_bookmark_file_remove_group, "g_bookmark_file_remove_group");
		bindFunc(cast(void**)&g_bookmark_file_remove_item, "g_bookmark_file_remove_item");
		bindFunc(cast(void**)&g_bookmark_file_set_added, "g_bookmark_file_set_added");
		bindFunc(cast(void**)&g_bookmark_file_set_app_info, "g_bookmark_file_set_app_info");
		bindFunc(cast(void**)&g_bookmark_file_set_description, "g_bookmark_file_set_description");
		bindFunc(cast(void**)&g_bookmark_file_set_groups, "g_bookmark_file_set_groups");
		bindFunc(cast(void**)&g_bookmark_file_set_icon, "g_bookmark_file_set_icon");
		bindFunc(cast(void**)&g_bookmark_file_set_is_private, "g_bookmark_file_set_is_private");
		bindFunc(cast(void**)&g_bookmark_file_set_mime_type, "g_bookmark_file_set_mime_type");
		bindFunc(cast(void**)&g_bookmark_file_set_modified, "g_bookmark_file_set_modified");
		bindFunc(cast(void**)&g_bookmark_file_set_title, "g_bookmark_file_set_title");
		bindFunc(cast(void**)&g_bookmark_file_set_visited, "g_bookmark_file_set_visited");
		bindFunc(cast(void**)&g_bookmark_file_to_data, "g_bookmark_file_to_data");
		bindFunc(cast(void**)&g_bookmark_file_to_file, "g_bookmark_file_to_file");
		bindFunc(cast(void**)&g_build_filename, "g_build_filename");
		bindFunc(cast(void**)&g_build_filenamev, "g_build_filenamev");
		bindFunc(cast(void**)&g_build_path, "g_build_path");
		bindFunc(cast(void**)&g_build_pathv, "g_build_pathv");
		bindFunc(cast(void**)&g_byte_array_append, "g_byte_array_append");
		bindFunc(cast(void**)&g_byte_array_free, "g_byte_array_free");
		bindFunc(cast(void**)&g_byte_array_free_to_bytes, "g_byte_array_free_to_bytes");
		bindFunc(cast(void**)&g_byte_array_new, "g_byte_array_new");
		bindFunc(cast(void**)&g_byte_array_new_take, "g_byte_array_new_take");
		bindFunc(cast(void**)&g_byte_array_prepend, "g_byte_array_prepend");
		bindFunc(cast(void**)&g_byte_array_ref, "g_byte_array_ref");
		bindFunc(cast(void**)&g_byte_array_remove_index, "g_byte_array_remove_index");
		bindFunc(cast(void**)&g_byte_array_remove_index_fast, "g_byte_array_remove_index_fast");
		bindFunc(cast(void**)&g_byte_array_remove_range, "g_byte_array_remove_range");
		bindFunc(cast(void**)&g_byte_array_set_size, "g_byte_array_set_size");
		bindFunc(cast(void**)&g_byte_array_sized_new, "g_byte_array_sized_new");
		bindFunc(cast(void**)&g_byte_array_sort, "g_byte_array_sort");
		bindFunc(cast(void**)&g_byte_array_sort_with_data, "g_byte_array_sort_with_data");
		bindFunc(cast(void**)&g_byte_array_unref, "g_byte_array_unref");
		bindFunc(cast(void**)&g_bytes_compare, "g_bytes_compare");
		bindFunc(cast(void**)&g_bytes_equal, "g_bytes_equal");
		bindFunc(cast(void**)&g_bytes_get_data, "g_bytes_get_data");
		bindFunc(cast(void**)&g_bytes_get_size, "g_bytes_get_size");
		bindFunc(cast(void**)&g_bytes_hash, "g_bytes_hash");
		bindFunc(cast(void**)&g_bytes_new, "g_bytes_new");
		bindFunc(cast(void**)&g_bytes_new_from_bytes, "g_bytes_new_from_bytes");
		bindFunc(cast(void**)&g_bytes_new_static, "g_bytes_new_static");
		bindFunc(cast(void**)&g_bytes_new_take, "g_bytes_new_take");
		bindFunc(cast(void**)&g_bytes_new_with_free_func, "g_bytes_new_with_free_func");
		bindFunc(cast(void**)&g_bytes_ref, "g_bytes_ref");
		bindFunc(cast(void**)&g_bytes_unref, "g_bytes_unref");
		bindFunc(cast(void**)&g_bytes_unref_to_array, "g_bytes_unref_to_array");
		bindFunc(cast(void**)&g_bytes_unref_to_data, "g_bytes_unref_to_data");
		bindFunc(cast(void**)&g_chdir, "g_chdir");
		bindFunc(cast(void**)&g_checksum_copy, "g_checksum_copy");
		bindFunc(cast(void**)&g_checksum_free, "g_checksum_free");
		bindFunc(cast(void**)&g_checksum_get_digest, "g_checksum_get_digest");
		bindFunc(cast(void**)&g_checksum_get_string, "g_checksum_get_string");
		bindFunc(cast(void**)&g_checksum_new, "g_checksum_new");
		bindFunc(cast(void**)&g_checksum_reset, "g_checksum_reset");
		bindFunc(cast(void**)&g_checksum_type_get_length, "g_checksum_type_get_length");
		bindFunc(cast(void**)&g_checksum_update, "g_checksum_update");
		bindFunc(cast(void**)&g_child_watch_add, "g_child_watch_add");
		bindFunc(cast(void**)&g_child_watch_add_full, "g_child_watch_add_full");
		bindFunc(cast(void**)&g_child_watch_funcs, "g_child_watch_funcs");
		bindFunc(cast(void**)&g_child_watch_source_new, "g_child_watch_source_new");
		bindFunc(cast(void**)&g_clear_error, "g_clear_error");
		bindFunc(cast(void**)&g_compute_checksum_for_data, "g_compute_checksum_for_data");
		bindFunc(cast(void**)&g_compute_checksum_for_string, "g_compute_checksum_for_string");
		bindFunc(cast(void**)&g_compute_hmac_for_data, "g_compute_hmac_for_data");
		bindFunc(cast(void**)&g_compute_hmac_for_string, "g_compute_hmac_for_string");
		bindFunc(cast(void**)&g_cond_broadcast, "g_cond_broadcast");
		bindFunc(cast(void**)&g_cond_clear, "g_cond_clear");
		bindFunc(cast(void**)&g_cond_init, "g_cond_init");
		bindFunc(cast(void**)&g_cond_signal, "g_cond_signal");
		bindFunc(cast(void**)&g_cond_wait, "g_cond_wait");
		bindFunc(cast(void**)&g_cond_wait_until, "g_cond_wait_until");
		bindFunc(cast(void**)&g_convert, "g_convert");
		bindFunc(cast(void**)&g_convert_error_quark, "g_convert_error_quark");
		bindFunc(cast(void**)&g_convert_with_fallback, "g_convert_with_fallback");
		bindFunc(cast(void**)&g_convert_with_iconv, "g_convert_with_iconv");
		bindFunc(cast(void**)&g_datalist_clear, "g_datalist_clear");
		bindFunc(cast(void**)&g_datalist_foreach, "g_datalist_foreach");
		bindFunc(cast(void**)&g_datalist_get_data, "g_datalist_get_data");
		bindFunc(cast(void**)&g_datalist_get_flags, "g_datalist_get_flags");
		bindFunc(cast(void**)&g_datalist_id_get_data, "g_datalist_id_get_data");
		bindFunc(cast(void**)&g_datalist_id_remove_no_notify, "g_datalist_id_remove_no_notify");
		bindFunc(cast(void**)&g_datalist_id_set_data_full, "g_datalist_id_set_data_full");
		bindFunc(cast(void**)&g_datalist_init, "g_datalist_init");
		bindFunc(cast(void**)&g_datalist_set_flags, "g_datalist_set_flags");
		bindFunc(cast(void**)&g_datalist_unset_flags, "g_datalist_unset_flags");
		bindFunc(cast(void**)&g_dataset_destroy, "g_dataset_destroy");
		bindFunc(cast(void**)&g_dataset_foreach, "g_dataset_foreach");
		bindFunc(cast(void**)&g_dataset_id_get_data, "g_dataset_id_get_data");
		bindFunc(cast(void**)&g_dataset_id_remove_no_notify, "g_dataset_id_remove_no_notify");
		bindFunc(cast(void**)&g_dataset_id_set_data_full, "g_dataset_id_set_data_full");
		bindFunc(cast(void**)&g_date_add_days, "g_date_add_days");
		bindFunc(cast(void**)&g_date_add_months, "g_date_add_months");
		bindFunc(cast(void**)&g_date_add_years, "g_date_add_years");
		bindFunc(cast(void**)&g_date_clamp, "g_date_clamp");
		bindFunc(cast(void**)&g_date_clear, "g_date_clear");
		bindFunc(cast(void**)&g_date_compare, "g_date_compare");
		bindFunc(cast(void**)&g_date_days_between, "g_date_days_between");
		bindFunc(cast(void**)&g_date_free, "g_date_free");
		bindFunc(cast(void**)&g_date_get_day, "g_date_get_day");
		bindFunc(cast(void**)&g_date_get_day_of_year, "g_date_get_day_of_year");
		bindFunc(cast(void**)&g_date_get_days_in_month, "g_date_get_days_in_month");
		bindFunc(cast(void**)&g_date_get_iso8601_week_of_year, "g_date_get_iso8601_week_of_year");
		bindFunc(cast(void**)&g_date_get_julian, "g_date_get_julian");
		bindFunc(cast(void**)&g_date_get_monday_week_of_year, "g_date_get_monday_week_of_year");
		bindFunc(cast(void**)&g_date_get_monday_weeks_in_year, "g_date_get_monday_weeks_in_year");
		bindFunc(cast(void**)&g_date_get_month, "g_date_get_month");
		bindFunc(cast(void**)&g_date_get_sunday_week_of_year, "g_date_get_sunday_week_of_year");
		bindFunc(cast(void**)&g_date_get_sunday_weeks_in_year, "g_date_get_sunday_weeks_in_year");
		bindFunc(cast(void**)&g_date_get_weekday, "g_date_get_weekday");
		bindFunc(cast(void**)&g_date_get_year, "g_date_get_year");
		bindFunc(cast(void**)&g_date_is_first_of_month, "g_date_is_first_of_month");
		bindFunc(cast(void**)&g_date_is_last_of_month, "g_date_is_last_of_month");
		bindFunc(cast(void**)&g_date_is_leap_year, "g_date_is_leap_year");
		bindFunc(cast(void**)&g_date_new, "g_date_new");
		bindFunc(cast(void**)&g_date_new_dmy, "g_date_new_dmy");
		bindFunc(cast(void**)&g_date_new_julian, "g_date_new_julian");
		bindFunc(cast(void**)&g_date_order, "g_date_order");
		bindFunc(cast(void**)&g_date_set_day, "g_date_set_day");
		bindFunc(cast(void**)&g_date_set_dmy, "g_date_set_dmy");
		bindFunc(cast(void**)&g_date_set_julian, "g_date_set_julian");
		bindFunc(cast(void**)&g_date_set_month, "g_date_set_month");
		bindFunc(cast(void**)&g_date_set_parse, "g_date_set_parse");
		bindFunc(cast(void**)&g_date_set_time, "g_date_set_time");
		bindFunc(cast(void**)&g_date_set_time_t, "g_date_set_time_t");
		bindFunc(cast(void**)&g_date_set_time_val, "g_date_set_time_val");
		bindFunc(cast(void**)&g_date_set_year, "g_date_set_year");
		bindFunc(cast(void**)&g_date_strftime, "g_date_strftime");
		bindFunc(cast(void**)&g_date_subtract_days, "g_date_subtract_days");
		bindFunc(cast(void**)&g_date_subtract_months, "g_date_subtract_months");
		bindFunc(cast(void**)&g_date_subtract_years, "g_date_subtract_years");
		bindFunc(cast(void**)&g_date_time_add, "g_date_time_add");
		bindFunc(cast(void**)&g_date_time_add_days, "g_date_time_add_days");
		bindFunc(cast(void**)&g_date_time_add_full, "g_date_time_add_full");
		bindFunc(cast(void**)&g_date_time_add_hours, "g_date_time_add_hours");
		bindFunc(cast(void**)&g_date_time_add_minutes, "g_date_time_add_minutes");
		bindFunc(cast(void**)&g_date_time_add_months, "g_date_time_add_months");
		bindFunc(cast(void**)&g_date_time_add_seconds, "g_date_time_add_seconds");
		bindFunc(cast(void**)&g_date_time_add_weeks, "g_date_time_add_weeks");
		bindFunc(cast(void**)&g_date_time_add_years, "g_date_time_add_years");
		bindFunc(cast(void**)&g_date_time_compare, "g_date_time_compare");
		bindFunc(cast(void**)&g_date_time_difference, "g_date_time_difference");
		bindFunc(cast(void**)&g_date_time_equal, "g_date_time_equal");
		bindFunc(cast(void**)&g_date_time_format, "g_date_time_format");
		bindFunc(cast(void**)&g_date_time_get_day_of_month, "g_date_time_get_day_of_month");
		bindFunc(cast(void**)&g_date_time_get_day_of_week, "g_date_time_get_day_of_week");
		bindFunc(cast(void**)&g_date_time_get_day_of_year, "g_date_time_get_day_of_year");
		bindFunc(cast(void**)&g_date_time_get_hour, "g_date_time_get_hour");
		bindFunc(cast(void**)&g_date_time_get_microsecond, "g_date_time_get_microsecond");
		bindFunc(cast(void**)&g_date_time_get_minute, "g_date_time_get_minute");
		bindFunc(cast(void**)&g_date_time_get_month, "g_date_time_get_month");
		bindFunc(cast(void**)&g_date_time_get_second, "g_date_time_get_second");
		bindFunc(cast(void**)&g_date_time_get_seconds, "g_date_time_get_seconds");
		bindFunc(cast(void**)&g_date_time_get_timezone_abbreviation, "g_date_time_get_timezone_abbreviation");
		bindFunc(cast(void**)&g_date_time_get_utc_offset, "g_date_time_get_utc_offset");
		bindFunc(cast(void**)&g_date_time_get_week_numbering_year, "g_date_time_get_week_numbering_year");
		bindFunc(cast(void**)&g_date_time_get_week_of_year, "g_date_time_get_week_of_year");
		bindFunc(cast(void**)&g_date_time_get_year, "g_date_time_get_year");
		bindFunc(cast(void**)&g_date_time_get_ymd, "g_date_time_get_ymd");
		bindFunc(cast(void**)&g_date_time_hash, "g_date_time_hash");
		bindFunc(cast(void**)&g_date_time_is_daylight_savings, "g_date_time_is_daylight_savings");
		bindFunc(cast(void**)&g_date_time_new, "g_date_time_new");
		bindFunc(cast(void**)&g_date_time_new_from_timeval_local, "g_date_time_new_from_timeval_local");
		bindFunc(cast(void**)&g_date_time_new_from_timeval_utc, "g_date_time_new_from_timeval_utc");
		bindFunc(cast(void**)&g_date_time_new_from_unix_local, "g_date_time_new_from_unix_local");
		bindFunc(cast(void**)&g_date_time_new_from_unix_utc, "g_date_time_new_from_unix_utc");
		bindFunc(cast(void**)&g_date_time_new_local, "g_date_time_new_local");
		bindFunc(cast(void**)&g_date_time_new_now, "g_date_time_new_now");
		bindFunc(cast(void**)&g_date_time_new_now_local, "g_date_time_new_now_local");
		bindFunc(cast(void**)&g_date_time_new_now_utc, "g_date_time_new_now_utc");
		bindFunc(cast(void**)&g_date_time_new_utc, "g_date_time_new_utc");
		bindFunc(cast(void**)&g_date_time_ref, "g_date_time_ref");
		bindFunc(cast(void**)&g_date_time_to_local, "g_date_time_to_local");
		bindFunc(cast(void**)&g_date_time_to_timeval, "g_date_time_to_timeval");
		bindFunc(cast(void**)&g_date_time_to_timezone, "g_date_time_to_timezone");
		bindFunc(cast(void**)&g_date_time_to_unix, "g_date_time_to_unix");
		bindFunc(cast(void**)&g_date_time_to_utc, "g_date_time_to_utc");
		bindFunc(cast(void**)&g_date_time_unref, "g_date_time_unref");
		bindFunc(cast(void**)&g_date_to_struct_tm, "g_date_to_struct_tm");
		bindFunc(cast(void**)&g_date_valid, "g_date_valid");
		bindFunc(cast(void**)&g_date_valid_day, "g_date_valid_day");
		bindFunc(cast(void**)&g_date_valid_dmy, "g_date_valid_dmy");
		bindFunc(cast(void**)&g_date_valid_julian, "g_date_valid_julian");
		bindFunc(cast(void**)&g_date_valid_month, "g_date_valid_month");
		bindFunc(cast(void**)&g_date_valid_weekday, "g_date_valid_weekday");
		bindFunc(cast(void**)&g_date_valid_year, "g_date_valid_year");
		bindFunc(cast(void**)&g_dcgettext, "g_dcgettext");
		bindFunc(cast(void**)&g_dgettext, "g_dgettext");
		bindFunc(cast(void**)&g_dir_close, "g_dir_close");
		bindFunc(cast(void**)&g_dir_make_tmp, "g_dir_make_tmp");
		bindFunc(cast(void**)&g_dir_open, "g_dir_open");
		bindFunc(cast(void**)&g_dir_read_name, "g_dir_read_name");
		bindFunc(cast(void**)&g_dir_rewind, "g_dir_rewind");
		bindFunc(cast(void**)&g_direct_equal, "g_direct_equal");
		bindFunc(cast(void**)&g_direct_hash, "g_direct_hash");
		bindFunc(cast(void**)&g_dngettext, "g_dngettext");
		bindFunc(cast(void**)&g_double_equal, "g_double_equal");
		bindFunc(cast(void**)&g_double_hash, "g_double_hash");
		bindFunc(cast(void**)&g_dpgettext, "g_dpgettext");
		bindFunc(cast(void**)&g_dpgettext2, "g_dpgettext2");
		bindFunc(cast(void**)&g_environ_getenv, "g_environ_getenv");
		bindFunc(cast(void**)&g_environ_setenv, "g_environ_setenv");
		bindFunc(cast(void**)&g_environ_unsetenv, "g_environ_unsetenv");
		bindFunc(cast(void**)&g_error_copy, "g_error_copy");
		bindFunc(cast(void**)&g_error_free, "g_error_free");
		bindFunc(cast(void**)&g_error_matches, "g_error_matches");
		bindFunc(cast(void**)&g_error_new, "g_error_new");
		bindFunc(cast(void**)&g_error_new_literal, "g_error_new_literal");
		bindFunc(cast(void**)&g_error_new_valist, "g_error_new_valist");
		bindFunc(cast(void**)&g_file_error_from_errno, "g_file_error_from_errno");
		bindFunc(cast(void**)&g_file_error_quark, "g_file_error_quark");
		bindFunc(cast(void**)&g_file_get_contents, "g_file_get_contents");
		bindFunc(cast(void**)&g_file_open_tmp, "g_file_open_tmp");
		bindFunc(cast(void**)&g_file_read_link, "g_file_read_link");
		bindFunc(cast(void**)&g_file_set_contents, "g_file_set_contents");
		bindFunc(cast(void**)&g_file_test, "g_file_test");
		bindFunc(cast(void**)&g_filename_display_basename, "g_filename_display_basename");
		bindFunc(cast(void**)&g_filename_display_name, "g_filename_display_name");
		bindFunc(cast(void**)&g_filename_from_uri, "g_filename_from_uri");
		bindFunc(cast(void**)&g_filename_from_utf8, "g_filename_from_utf8");
		bindFunc(cast(void**)&g_filename_to_uri, "g_filename_to_uri");
		bindFunc(cast(void**)&g_filename_to_utf8, "g_filename_to_utf8");
		bindFunc(cast(void**)&g_find_program_in_path, "g_find_program_in_path");
		bindFunc(cast(void**)&g_format_size, "g_format_size");
		bindFunc(cast(void**)&g_format_size_for_display, "g_format_size_for_display");
		bindFunc(cast(void**)&g_format_size_full, "g_format_size_full");
		bindFunc(cast(void**)&g_fprintf, "g_fprintf");
		bindFunc(cast(void**)&g_free, "g_free");
		bindFunc(cast(void**)&g_get_application_name, "g_get_application_name");
		bindFunc(cast(void**)&g_get_charset, "g_get_charset");
		bindFunc(cast(void**)&g_get_codeset, "g_get_codeset");
		bindFunc(cast(void**)&g_get_current_dir, "g_get_current_dir");
		bindFunc(cast(void**)&g_get_current_time, "g_get_current_time");
		bindFunc(cast(void**)&g_get_environ, "g_get_environ");
		bindFunc(cast(void**)&g_get_filename_charsets, "g_get_filename_charsets");
		bindFunc(cast(void**)&g_get_home_dir, "g_get_home_dir");
		bindFunc(cast(void**)&g_get_host_name, "g_get_host_name");
		bindFunc(cast(void**)&g_get_language_names, "g_get_language_names");
		bindFunc(cast(void**)&g_get_locale_variants, "g_get_locale_variants");
		bindFunc(cast(void**)&g_get_monotonic_time, "g_get_monotonic_time");
		bindFunc(cast(void**)&g_get_prgname, "g_get_prgname");
		bindFunc(cast(void**)&g_get_real_name, "g_get_real_name");
		bindFunc(cast(void**)&g_get_real_time, "g_get_real_time");
		bindFunc(cast(void**)&g_get_system_config_dirs, "g_get_system_config_dirs");
		bindFunc(cast(void**)&g_get_system_data_dirs, "g_get_system_data_dirs");
		bindFunc(cast(void**)&g_get_tmp_dir, "g_get_tmp_dir");
		bindFunc(cast(void**)&g_get_user_cache_dir, "g_get_user_cache_dir");
		bindFunc(cast(void**)&g_get_user_config_dir, "g_get_user_config_dir");
		bindFunc(cast(void**)&g_get_user_data_dir, "g_get_user_data_dir");
		bindFunc(cast(void**)&g_get_user_name, "g_get_user_name");
		bindFunc(cast(void**)&g_get_user_runtime_dir, "g_get_user_runtime_dir");
		bindFunc(cast(void**)&g_get_user_special_dir, "g_get_user_special_dir");
		bindFunc(cast(void**)&g_getenv, "g_getenv");
		bindFunc(cast(void**)&g_hash_table_add, "g_hash_table_add");
		bindFunc(cast(void**)&g_hash_table_contains, "g_hash_table_contains");
		bindFunc(cast(void**)&g_hash_table_destroy, "g_hash_table_destroy");
		bindFunc(cast(void**)&g_hash_table_find, "g_hash_table_find");
		bindFunc(cast(void**)&g_hash_table_foreach, "g_hash_table_foreach");
		bindFunc(cast(void**)&g_hash_table_foreach_remove, "g_hash_table_foreach_remove");
		bindFunc(cast(void**)&g_hash_table_foreach_steal, "g_hash_table_foreach_steal");
		bindFunc(cast(void**)&g_hash_table_get_keys, "g_hash_table_get_keys");
		bindFunc(cast(void**)&g_hash_table_get_values, "g_hash_table_get_values");
		bindFunc(cast(void**)&g_hash_table_insert, "g_hash_table_insert");
		bindFunc(cast(void**)&g_hash_table_iter_get_hash_table, "g_hash_table_iter_get_hash_table");
		bindFunc(cast(void**)&g_hash_table_iter_init, "g_hash_table_iter_init");
		bindFunc(cast(void**)&g_hash_table_iter_next, "g_hash_table_iter_next");
		bindFunc(cast(void**)&g_hash_table_iter_remove, "g_hash_table_iter_remove");
		bindFunc(cast(void**)&g_hash_table_iter_replace, "g_hash_table_iter_replace");
		bindFunc(cast(void**)&g_hash_table_iter_steal, "g_hash_table_iter_steal");
		bindFunc(cast(void**)&g_hash_table_lookup, "g_hash_table_lookup");
		bindFunc(cast(void**)&g_hash_table_lookup_extended, "g_hash_table_lookup_extended");
		bindFunc(cast(void**)&g_hash_table_new, "g_hash_table_new");
		bindFunc(cast(void**)&g_hash_table_new_full, "g_hash_table_new_full");
		bindFunc(cast(void**)&g_hash_table_ref, "g_hash_table_ref");
		bindFunc(cast(void**)&g_hash_table_remove, "g_hash_table_remove");
		bindFunc(cast(void**)&g_hash_table_remove_all, "g_hash_table_remove_all");
		bindFunc(cast(void**)&g_hash_table_replace, "g_hash_table_replace");
		bindFunc(cast(void**)&g_hash_table_size, "g_hash_table_size");
		bindFunc(cast(void**)&g_hash_table_steal, "g_hash_table_steal");
		bindFunc(cast(void**)&g_hash_table_steal_all, "g_hash_table_steal_all");
		bindFunc(cast(void**)&g_hash_table_unref, "g_hash_table_unref");
		bindFunc(cast(void**)&g_hmac_copy, "g_hmac_copy");
		bindFunc(cast(void**)&g_hmac_get_digest, "g_hmac_get_digest");
		bindFunc(cast(void**)&g_hmac_get_string, "g_hmac_get_string");
		bindFunc(cast(void**)&g_hmac_new, "g_hmac_new");
		bindFunc(cast(void**)&g_hmac_ref, "g_hmac_ref");
		bindFunc(cast(void**)&g_hmac_unref, "g_hmac_unref");
		bindFunc(cast(void**)&g_hmac_update, "g_hmac_update");
		bindFunc(cast(void**)&g_hook_alloc, "g_hook_alloc");
		bindFunc(cast(void**)&g_hook_compare_ids, "g_hook_compare_ids");
		bindFunc(cast(void**)&g_hook_destroy, "g_hook_destroy");
		bindFunc(cast(void**)&g_hook_destroy_link, "g_hook_destroy_link");
		bindFunc(cast(void**)&g_hook_find, "g_hook_find");
		bindFunc(cast(void**)&g_hook_find_data, "g_hook_find_data");
		bindFunc(cast(void**)&g_hook_find_func, "g_hook_find_func");
		bindFunc(cast(void**)&g_hook_find_func_data, "g_hook_find_func_data");
		bindFunc(cast(void**)&g_hook_first_valid, "g_hook_first_valid");
		bindFunc(cast(void**)&g_hook_free, "g_hook_free");
		bindFunc(cast(void**)&g_hook_get, "g_hook_get");
		bindFunc(cast(void**)&g_hook_insert_before, "g_hook_insert_before");
		bindFunc(cast(void**)&g_hook_insert_sorted, "g_hook_insert_sorted");
		bindFunc(cast(void**)&g_hook_list_clear, "g_hook_list_clear");
		bindFunc(cast(void**)&g_hook_list_init, "g_hook_list_init");
		bindFunc(cast(void**)&g_hook_list_invoke, "g_hook_list_invoke");
		bindFunc(cast(void**)&g_hook_list_invoke_check, "g_hook_list_invoke_check");
		bindFunc(cast(void**)&g_hook_list_marshal, "g_hook_list_marshal");
		bindFunc(cast(void**)&g_hook_list_marshal_check, "g_hook_list_marshal_check");
		bindFunc(cast(void**)&g_hook_next_valid, "g_hook_next_valid");
		bindFunc(cast(void**)&g_hook_prepend, "g_hook_prepend");
		bindFunc(cast(void**)&g_hook_ref, "g_hook_ref");
		bindFunc(cast(void**)&g_hook_unref, "g_hook_unref");
		bindFunc(cast(void**)&g_hostname_is_ascii_encoded, "g_hostname_is_ascii_encoded");
		bindFunc(cast(void**)&g_hostname_is_ip_address, "g_hostname_is_ip_address");
		bindFunc(cast(void**)&g_hostname_is_non_ascii, "g_hostname_is_non_ascii");
		bindFunc(cast(void**)&g_hostname_to_ascii, "g_hostname_to_ascii");
		bindFunc(cast(void**)&g_hostname_to_unicode, "g_hostname_to_unicode");
		bindFunc(cast(void**)&g_iconv, "g_iconv");
		bindFunc(cast(void**)&g_iconv_close, "g_iconv_close");
		bindFunc(cast(void**)&g_iconv_open, "g_iconv_open");
		bindFunc(cast(void**)&g_idle_add, "g_idle_add");
		bindFunc(cast(void**)&g_idle_add_full, "g_idle_add_full");
		bindFunc(cast(void**)&g_idle_funcs, "g_idle_funcs");
		bindFunc(cast(void**)&g_idle_remove_by_data, "g_idle_remove_by_data");
		bindFunc(cast(void**)&g_idle_source_new, "g_idle_source_new");
		bindFunc(cast(void**)&g_int64_equal, "g_int64_equal");
		bindFunc(cast(void**)&g_int64_hash, "g_int64_hash");
		bindFunc(cast(void**)&g_int_equal, "g_int_equal");
		bindFunc(cast(void**)&g_int_hash, "g_int_hash");
		bindFunc(cast(void**)&g_intern_static_string, "g_intern_static_string");
		bindFunc(cast(void**)&g_intern_string, "g_intern_string");
		bindFunc(cast(void**)&g_io_add_watch, "g_io_add_watch");
		bindFunc(cast(void**)&g_io_add_watch_full, "g_io_add_watch_full");
		bindFunc(cast(void**)&g_io_channel_close, "g_io_channel_close");
		bindFunc(cast(void**)&g_io_channel_error_from_errno, "g_io_channel_error_from_errno");
		bindFunc(cast(void**)&g_io_channel_error_quark, "g_io_channel_error_quark");
		bindFunc(cast(void**)&g_io_channel_flush, "g_io_channel_flush");
		bindFunc(cast(void**)&g_io_channel_get_buffer_condition, "g_io_channel_get_buffer_condition");
		bindFunc(cast(void**)&g_io_channel_get_buffer_size, "g_io_channel_get_buffer_size");
		bindFunc(cast(void**)&g_io_channel_get_buffered, "g_io_channel_get_buffered");
		bindFunc(cast(void**)&g_io_channel_get_close_on_unref, "g_io_channel_get_close_on_unref");
		bindFunc(cast(void**)&g_io_channel_get_encoding, "g_io_channel_get_encoding");
		bindFunc(cast(void**)&g_io_channel_get_flags, "g_io_channel_get_flags");
		bindFunc(cast(void**)&g_io_channel_get_line_term, "g_io_channel_get_line_term");
		bindFunc(cast(void**)&g_io_channel_init, "g_io_channel_init");
		bindFunc(cast(void**)&g_io_channel_new_file, "g_io_channel_new_file");
		bindFunc(cast(void**)&g_io_channel_read, "g_io_channel_read");
		bindFunc(cast(void**)&g_io_channel_read_chars, "g_io_channel_read_chars");
		bindFunc(cast(void**)&g_io_channel_read_line, "g_io_channel_read_line");
		bindFunc(cast(void**)&g_io_channel_read_line_string, "g_io_channel_read_line_string");
		bindFunc(cast(void**)&g_io_channel_read_to_end, "g_io_channel_read_to_end");
		bindFunc(cast(void**)&g_io_channel_read_unichar, "g_io_channel_read_unichar");
		bindFunc(cast(void**)&g_io_channel_ref, "g_io_channel_ref");
		bindFunc(cast(void**)&g_io_channel_seek, "g_io_channel_seek");
		bindFunc(cast(void**)&g_io_channel_seek_position, "g_io_channel_seek_position");
		bindFunc(cast(void**)&g_io_channel_set_buffer_size, "g_io_channel_set_buffer_size");
		bindFunc(cast(void**)&g_io_channel_set_buffered, "g_io_channel_set_buffered");
		bindFunc(cast(void**)&g_io_channel_set_close_on_unref, "g_io_channel_set_close_on_unref");
		bindFunc(cast(void**)&g_io_channel_set_encoding, "g_io_channel_set_encoding");
		bindFunc(cast(void**)&g_io_channel_set_flags, "g_io_channel_set_flags");
		bindFunc(cast(void**)&g_io_channel_set_line_term, "g_io_channel_set_line_term");
		bindFunc(cast(void**)&g_io_channel_shutdown, "g_io_channel_shutdown");
		bindFunc(cast(void**)&g_io_channel_unix_get_fd, "g_io_channel_unix_get_fd");
		bindFunc(cast(void**)&g_io_channel_unix_new, "g_io_channel_unix_new");
		bindFunc(cast(void**)&g_io_channel_unref, "g_io_channel_unref");
		bindFunc(cast(void**)&g_io_channel_write, "g_io_channel_write");
		bindFunc(cast(void**)&g_io_channel_write_chars, "g_io_channel_write_chars");
		bindFunc(cast(void**)&g_io_channel_write_unichar, "g_io_channel_write_unichar");
		bindFunc(cast(void**)&g_io_create_watch, "g_io_create_watch");
		bindFunc(cast(void**)&g_io_watch_funcs, "g_io_watch_funcs");
		bindFunc(cast(void**)&g_key_file_error_quark, "g_key_file_error_quark");
		bindFunc(cast(void**)&g_key_file_free, "g_key_file_free");
		bindFunc(cast(void**)&g_key_file_get_boolean, "g_key_file_get_boolean");
		bindFunc(cast(void**)&g_key_file_get_boolean_list, "g_key_file_get_boolean_list");
		bindFunc(cast(void**)&g_key_file_get_comment, "g_key_file_get_comment");
		bindFunc(cast(void**)&g_key_file_get_double, "g_key_file_get_double");
		bindFunc(cast(void**)&g_key_file_get_double_list, "g_key_file_get_double_list");
		bindFunc(cast(void**)&g_key_file_get_groups, "g_key_file_get_groups");
		bindFunc(cast(void**)&g_key_file_get_int64, "g_key_file_get_int64");
		bindFunc(cast(void**)&g_key_file_get_integer, "g_key_file_get_integer");
		bindFunc(cast(void**)&g_key_file_get_integer_list, "g_key_file_get_integer_list");
		bindFunc(cast(void**)&g_key_file_get_keys, "g_key_file_get_keys");
		bindFunc(cast(void**)&g_key_file_get_locale_string, "g_key_file_get_locale_string");
		bindFunc(cast(void**)&g_key_file_get_locale_string_list, "g_key_file_get_locale_string_list");
		bindFunc(cast(void**)&g_key_file_get_start_group, "g_key_file_get_start_group");
		bindFunc(cast(void**)&g_key_file_get_string, "g_key_file_get_string");
		bindFunc(cast(void**)&g_key_file_get_string_list, "g_key_file_get_string_list");
		bindFunc(cast(void**)&g_key_file_get_uint64, "g_key_file_get_uint64");
		bindFunc(cast(void**)&g_key_file_get_value, "g_key_file_get_value");
		bindFunc(cast(void**)&g_key_file_has_group, "g_key_file_has_group");
		bindFunc(cast(void**)&g_key_file_has_key, "g_key_file_has_key");
		bindFunc(cast(void**)&g_key_file_load_from_data, "g_key_file_load_from_data");
		bindFunc(cast(void**)&g_key_file_load_from_data_dirs, "g_key_file_load_from_data_dirs");
		bindFunc(cast(void**)&g_key_file_load_from_dirs, "g_key_file_load_from_dirs");
		bindFunc(cast(void**)&g_key_file_load_from_file, "g_key_file_load_from_file");
		bindFunc(cast(void**)&g_key_file_new, "g_key_file_new");
		bindFunc(cast(void**)&g_key_file_ref, "g_key_file_ref");
		bindFunc(cast(void**)&g_key_file_remove_comment, "g_key_file_remove_comment");
		bindFunc(cast(void**)&g_key_file_remove_group, "g_key_file_remove_group");
		bindFunc(cast(void**)&g_key_file_remove_key, "g_key_file_remove_key");
		bindFunc(cast(void**)&g_key_file_set_boolean, "g_key_file_set_boolean");
		bindFunc(cast(void**)&g_key_file_set_boolean_list, "g_key_file_set_boolean_list");
		bindFunc(cast(void**)&g_key_file_set_comment, "g_key_file_set_comment");
		bindFunc(cast(void**)&g_key_file_set_double, "g_key_file_set_double");
		bindFunc(cast(void**)&g_key_file_set_double_list, "g_key_file_set_double_list");
		bindFunc(cast(void**)&g_key_file_set_int64, "g_key_file_set_int64");
		bindFunc(cast(void**)&g_key_file_set_integer, "g_key_file_set_integer");
		bindFunc(cast(void**)&g_key_file_set_integer_list, "g_key_file_set_integer_list");
		bindFunc(cast(void**)&g_key_file_set_list_separator, "g_key_file_set_list_separator");
		bindFunc(cast(void**)&g_key_file_set_locale_string, "g_key_file_set_locale_string");
		bindFunc(cast(void**)&g_key_file_set_locale_string_list, "g_key_file_set_locale_string_list");
		bindFunc(cast(void**)&g_key_file_set_string, "g_key_file_set_string");
		bindFunc(cast(void**)&g_key_file_set_string_list, "g_key_file_set_string_list");
		bindFunc(cast(void**)&g_key_file_set_uint64, "g_key_file_set_uint64");
		bindFunc(cast(void**)&g_key_file_set_value, "g_key_file_set_value");
		bindFunc(cast(void**)&g_key_file_to_data, "g_key_file_to_data");
		bindFunc(cast(void**)&g_key_file_unref, "g_key_file_unref");
		bindFunc(cast(void**)&g_list_alloc, "g_list_alloc");
		bindFunc(cast(void**)&g_list_append, "g_list_append");
		bindFunc(cast(void**)&g_list_concat, "g_list_concat");
		bindFunc(cast(void**)&g_list_copy, "g_list_copy");
		bindFunc(cast(void**)&g_list_delete_link, "g_list_delete_link");
		bindFunc(cast(void**)&g_list_find, "g_list_find");
		bindFunc(cast(void**)&g_list_find_custom, "g_list_find_custom");
		bindFunc(cast(void**)&g_list_first, "g_list_first");
		bindFunc(cast(void**)&g_list_foreach, "g_list_foreach");
		bindFunc(cast(void**)&g_list_free, "g_list_free");
		bindFunc(cast(void**)&g_list_free_1, "g_list_free_1");
		bindFunc(cast(void**)&g_list_free_full, "g_list_free_full");
		bindFunc(cast(void**)&g_list_index, "g_list_index");
		bindFunc(cast(void**)&g_list_insert, "g_list_insert");
		bindFunc(cast(void**)&g_list_insert_before, "g_list_insert_before");
		bindFunc(cast(void**)&g_list_insert_sorted, "g_list_insert_sorted");
		bindFunc(cast(void**)&g_list_insert_sorted_with_data, "g_list_insert_sorted_with_data");
		bindFunc(cast(void**)&g_list_last, "g_list_last");
		bindFunc(cast(void**)&g_list_length, "g_list_length");
		bindFunc(cast(void**)&g_list_nth, "g_list_nth");
		bindFunc(cast(void**)&g_list_nth_data, "g_list_nth_data");
		bindFunc(cast(void**)&g_list_nth_prev, "g_list_nth_prev");
		bindFunc(cast(void**)&g_list_position, "g_list_position");
		bindFunc(cast(void**)&g_list_prepend, "g_list_prepend");
		bindFunc(cast(void**)&g_list_remove, "g_list_remove");
		bindFunc(cast(void**)&g_list_remove_all, "g_list_remove_all");
		bindFunc(cast(void**)&g_list_remove_link, "g_list_remove_link");
		bindFunc(cast(void**)&g_list_reverse, "g_list_reverse");
		bindFunc(cast(void**)&g_list_sort, "g_list_sort");
		bindFunc(cast(void**)&g_list_sort_with_data, "g_list_sort_with_data");
		bindFunc(cast(void**)&g_listenv, "g_listenv");
		bindFunc(cast(void**)&g_locale_from_utf8, "g_locale_from_utf8");
		bindFunc(cast(void**)&g_locale_to_utf8, "g_locale_to_utf8");
		bindFunc(cast(void**)&g_log, "g_log");
		bindFunc(cast(void**)&g_log_default_handler, "g_log_default_handler");
		bindFunc(cast(void**)&g_log_remove_handler, "g_log_remove_handler");
		bindFunc(cast(void**)&g_log_set_always_fatal, "g_log_set_always_fatal");
		bindFunc(cast(void**)&g_log_set_default_handler, "g_log_set_default_handler");
		bindFunc(cast(void**)&g_log_set_fatal_mask, "g_log_set_fatal_mask");
		bindFunc(cast(void**)&g_log_set_handler, "g_log_set_handler");
		bindFunc(cast(void**)&g_logv, "g_logv");
		bindFunc(cast(void**)&g_main_context_acquire, "g_main_context_acquire");
		bindFunc(cast(void**)&g_main_context_add_poll, "g_main_context_add_poll");
		bindFunc(cast(void**)&g_main_context_check, "g_main_context_check");
		bindFunc(cast(void**)&g_main_context_default, "g_main_context_default");
		bindFunc(cast(void**)&g_main_context_dispatch, "g_main_context_dispatch");
		bindFunc(cast(void**)&g_main_context_find_source_by_funcs_user_data, "g_main_context_find_source_by_funcs_user_data");
		bindFunc(cast(void**)&g_main_context_find_source_by_id, "g_main_context_find_source_by_id");
		bindFunc(cast(void**)&g_main_context_find_source_by_user_data, "g_main_context_find_source_by_user_data");
		bindFunc(cast(void**)&g_main_context_get_poll_func, "g_main_context_get_poll_func");
		bindFunc(cast(void**)&g_main_context_get_thread_default, "g_main_context_get_thread_default");
		bindFunc(cast(void**)&g_main_context_invoke, "g_main_context_invoke");
		bindFunc(cast(void**)&g_main_context_invoke_full, "g_main_context_invoke_full");
		bindFunc(cast(void**)&g_main_context_is_owner, "g_main_context_is_owner");
		bindFunc(cast(void**)&g_main_context_iteration, "g_main_context_iteration");
		bindFunc(cast(void**)&g_main_context_new, "g_main_context_new");
		bindFunc(cast(void**)&g_main_context_pending, "g_main_context_pending");
		bindFunc(cast(void**)&g_main_context_pop_thread_default, "g_main_context_pop_thread_default");
		bindFunc(cast(void**)&g_main_context_prepare, "g_main_context_prepare");
		bindFunc(cast(void**)&g_main_context_push_thread_default, "g_main_context_push_thread_default");
		bindFunc(cast(void**)&g_main_context_query, "g_main_context_query");
		bindFunc(cast(void**)&g_main_context_ref, "g_main_context_ref");
		bindFunc(cast(void**)&g_main_context_ref_thread_default, "g_main_context_ref_thread_default");
		bindFunc(cast(void**)&g_main_context_release, "g_main_context_release");
		bindFunc(cast(void**)&g_main_context_remove_poll, "g_main_context_remove_poll");
		bindFunc(cast(void**)&g_main_context_set_poll_func, "g_main_context_set_poll_func");
		bindFunc(cast(void**)&g_main_context_unref, "g_main_context_unref");
		bindFunc(cast(void**)&g_main_context_wait, "g_main_context_wait");
		bindFunc(cast(void**)&g_main_context_wakeup, "g_main_context_wakeup");
		bindFunc(cast(void**)&g_main_current_source, "g_main_current_source");
		bindFunc(cast(void**)&g_main_depth, "g_main_depth");
		bindFunc(cast(void**)&g_main_loop_get_context, "g_main_loop_get_context");
		bindFunc(cast(void**)&g_main_loop_is_running, "g_main_loop_is_running");
		bindFunc(cast(void**)&g_main_loop_new, "g_main_loop_new");
		bindFunc(cast(void**)&g_main_loop_quit, "g_main_loop_quit");
		bindFunc(cast(void**)&g_main_loop_ref, "g_main_loop_ref");
		bindFunc(cast(void**)&g_main_loop_run, "g_main_loop_run");
		bindFunc(cast(void**)&g_main_loop_unref, "g_main_loop_unref");
		bindFunc(cast(void**)&g_malloc, "g_malloc");
		bindFunc(cast(void**)&g_malloc0, "g_malloc0");
		bindFunc(cast(void**)&g_malloc0_n, "g_malloc0_n");
		bindFunc(cast(void**)&g_malloc_n, "g_malloc_n");
		bindFunc(cast(void**)&g_mapped_file_free, "g_mapped_file_free");
		bindFunc(cast(void**)&g_mapped_file_get_contents, "g_mapped_file_get_contents");
		bindFunc(cast(void**)&g_mapped_file_get_length, "g_mapped_file_get_length");
		bindFunc(cast(void**)&g_mapped_file_new, "g_mapped_file_new");
		bindFunc(cast(void**)&g_mapped_file_new_from_fd, "g_mapped_file_new_from_fd");
		bindFunc(cast(void**)&g_mapped_file_ref, "g_mapped_file_ref");
		bindFunc(cast(void**)&g_mapped_file_unref, "g_mapped_file_unref");
		bindFunc(cast(void**)&g_markup_collect_attributes, "g_markup_collect_attributes");
		bindFunc(cast(void**)&g_markup_error_quark, "g_markup_error_quark");
		bindFunc(cast(void**)&g_markup_escape_text, "g_markup_escape_text");
		bindFunc(cast(void**)&g_markup_parse_context_end_parse, "g_markup_parse_context_end_parse");
		bindFunc(cast(void**)&g_markup_parse_context_free, "g_markup_parse_context_free");
		bindFunc(cast(void**)&g_markup_parse_context_get_element, "g_markup_parse_context_get_element");
		bindFunc(cast(void**)&g_markup_parse_context_get_element_stack, "g_markup_parse_context_get_element_stack");
		bindFunc(cast(void**)&g_markup_parse_context_get_position, "g_markup_parse_context_get_position");
		bindFunc(cast(void**)&g_markup_parse_context_get_user_data, "g_markup_parse_context_get_user_data");
		bindFunc(cast(void**)&g_markup_parse_context_new, "g_markup_parse_context_new");
		bindFunc(cast(void**)&g_markup_parse_context_parse, "g_markup_parse_context_parse");
		bindFunc(cast(void**)&g_markup_parse_context_pop, "g_markup_parse_context_pop");
		bindFunc(cast(void**)&g_markup_parse_context_push, "g_markup_parse_context_push");
		bindFunc(cast(void**)&g_markup_printf_escaped, "g_markup_printf_escaped");
		bindFunc(cast(void**)&g_markup_vprintf_escaped, "g_markup_vprintf_escaped");
		bindFunc(cast(void**)&g_match_info_expand_references, "g_match_info_expand_references");
		bindFunc(cast(void**)&g_match_info_fetch, "g_match_info_fetch");
		bindFunc(cast(void**)&g_match_info_fetch_all, "g_match_info_fetch_all");
		bindFunc(cast(void**)&g_match_info_fetch_named, "g_match_info_fetch_named");
		bindFunc(cast(void**)&g_match_info_fetch_named_pos, "g_match_info_fetch_named_pos");
		bindFunc(cast(void**)&g_match_info_fetch_pos, "g_match_info_fetch_pos");
		bindFunc(cast(void**)&g_match_info_free, "g_match_info_free");
		bindFunc(cast(void**)&g_match_info_get_match_count, "g_match_info_get_match_count");
		bindFunc(cast(void**)&g_match_info_get_regex, "g_match_info_get_regex");
		bindFunc(cast(void**)&g_match_info_get_string, "g_match_info_get_string");
		bindFunc(cast(void**)&g_match_info_is_partial_match, "g_match_info_is_partial_match");
		bindFunc(cast(void**)&g_match_info_matches, "g_match_info_matches");
		bindFunc(cast(void**)&g_match_info_next, "g_match_info_next");
		bindFunc(cast(void**)&g_match_info_ref, "g_match_info_ref");
		bindFunc(cast(void**)&g_match_info_unref, "g_match_info_unref");
		bindFunc(cast(void**)&g_mem_gc_friendly, "g_mem_gc_friendly");
		bindFunc(cast(void**)&g_mem_is_system_malloc, "g_mem_is_system_malloc");
		bindFunc(cast(void**)&g_mem_profile, "g_mem_profile");
		bindFunc(cast(void**)&g_mem_set_vtable, "g_mem_set_vtable");
		bindFunc(cast(void**)&g_memdup, "g_memdup");
		bindFunc(cast(void**)&g_mkdir_with_parents, "g_mkdir_with_parents");
		bindFunc(cast(void**)&g_mkdtemp, "g_mkdtemp");
		bindFunc(cast(void**)&g_mkdtemp_full, "g_mkdtemp_full");
		bindFunc(cast(void**)&g_mkstemp, "g_mkstemp");
		bindFunc(cast(void**)&g_mkstemp_full, "g_mkstemp_full");
		bindFunc(cast(void**)&g_mutex_clear, "g_mutex_clear");
		bindFunc(cast(void**)&g_mutex_init, "g_mutex_init");
		bindFunc(cast(void**)&g_mutex_lock, "g_mutex_lock");
		bindFunc(cast(void**)&g_mutex_trylock, "g_mutex_trylock");
		bindFunc(cast(void**)&g_mutex_unlock, "g_mutex_unlock");
		bindFunc(cast(void**)&g_node_child_index, "g_node_child_index");
		bindFunc(cast(void**)&g_node_child_position, "g_node_child_position");
		bindFunc(cast(void**)&g_node_children_foreach, "g_node_children_foreach");
		bindFunc(cast(void**)&g_node_copy, "g_node_copy");
		bindFunc(cast(void**)&g_node_copy_deep, "g_node_copy_deep");
		bindFunc(cast(void**)&g_node_depth, "g_node_depth");
		bindFunc(cast(void**)&g_node_destroy, "g_node_destroy");
		bindFunc(cast(void**)&g_node_find, "g_node_find");
		bindFunc(cast(void**)&g_node_find_child, "g_node_find_child");
		bindFunc(cast(void**)&g_node_first_sibling, "g_node_first_sibling");
		bindFunc(cast(void**)&g_node_get_root, "g_node_get_root");
		bindFunc(cast(void**)&g_node_insert, "g_node_insert");
		bindFunc(cast(void**)&g_node_insert_after, "g_node_insert_after");
		bindFunc(cast(void**)&g_node_insert_before, "g_node_insert_before");
		bindFunc(cast(void**)&g_node_is_ancestor, "g_node_is_ancestor");
		bindFunc(cast(void**)&g_node_last_child, "g_node_last_child");
		bindFunc(cast(void**)&g_node_last_sibling, "g_node_last_sibling");
		bindFunc(cast(void**)&g_node_max_height, "g_node_max_height");
		bindFunc(cast(void**)&g_node_n_children, "g_node_n_children");
		bindFunc(cast(void**)&g_node_n_nodes, "g_node_n_nodes");
		bindFunc(cast(void**)&g_node_new, "g_node_new");
		bindFunc(cast(void**)&g_node_nth_child, "g_node_nth_child");
		bindFunc(cast(void**)&g_node_prepend, "g_node_prepend");
		bindFunc(cast(void**)&g_node_reverse_children, "g_node_reverse_children");
		bindFunc(cast(void**)&g_node_traverse, "g_node_traverse");
		bindFunc(cast(void**)&g_node_unlink, "g_node_unlink");
		bindFunc(cast(void**)&g_nullify_pointer, "g_nullify_pointer");
		bindFunc(cast(void**)&g_on_error_query, "g_on_error_query");
		bindFunc(cast(void**)&g_on_error_stack_trace, "g_on_error_stack_trace");
		bindFunc(cast(void**)&g_once_impl, "g_once_impl");
		bindFunc(cast(void**)&g_once_init_enter, "g_once_init_enter");
		bindFunc(cast(void**)&g_once_init_leave, "g_once_init_leave");
		bindFunc(cast(void**)&g_option_context_add_group, "g_option_context_add_group");
		bindFunc(cast(void**)&g_option_context_add_main_entries, "g_option_context_add_main_entries");
		bindFunc(cast(void**)&g_option_context_free, "g_option_context_free");
		bindFunc(cast(void**)&g_option_context_get_description, "g_option_context_get_description");
		bindFunc(cast(void**)&g_option_context_get_help, "g_option_context_get_help");
		bindFunc(cast(void**)&g_option_context_get_help_enabled, "g_option_context_get_help_enabled");
		bindFunc(cast(void**)&g_option_context_get_ignore_unknown_options, "g_option_context_get_ignore_unknown_options");
		bindFunc(cast(void**)&g_option_context_get_main_group, "g_option_context_get_main_group");
		bindFunc(cast(void**)&g_option_context_get_summary, "g_option_context_get_summary");
		bindFunc(cast(void**)&g_option_context_new, "g_option_context_new");
		bindFunc(cast(void**)&g_option_context_parse, "g_option_context_parse");
		bindFunc(cast(void**)&g_option_context_set_description, "g_option_context_set_description");
		bindFunc(cast(void**)&g_option_context_set_help_enabled, "g_option_context_set_help_enabled");
		bindFunc(cast(void**)&g_option_context_set_ignore_unknown_options, "g_option_context_set_ignore_unknown_options");
		bindFunc(cast(void**)&g_option_context_set_main_group, "g_option_context_set_main_group");
		bindFunc(cast(void**)&g_option_context_set_summary, "g_option_context_set_summary");
		bindFunc(cast(void**)&g_option_context_set_translate_func, "g_option_context_set_translate_func");
		bindFunc(cast(void**)&g_option_context_set_translation_domain, "g_option_context_set_translation_domain");
		bindFunc(cast(void**)&g_option_error_quark, "g_option_error_quark");
		bindFunc(cast(void**)&g_option_group_add_entries, "g_option_group_add_entries");
		bindFunc(cast(void**)&g_option_group_free, "g_option_group_free");
		bindFunc(cast(void**)&g_option_group_new, "g_option_group_new");
		bindFunc(cast(void**)&g_option_group_set_error_hook, "g_option_group_set_error_hook");
		bindFunc(cast(void**)&g_option_group_set_parse_hooks, "g_option_group_set_parse_hooks");
		bindFunc(cast(void**)&g_option_group_set_translate_func, "g_option_group_set_translate_func");
		bindFunc(cast(void**)&g_option_group_set_translation_domain, "g_option_group_set_translation_domain");
		bindFunc(cast(void**)&g_parse_debug_string, "g_parse_debug_string");
		bindFunc(cast(void**)&g_path_get_basename, "g_path_get_basename");
		bindFunc(cast(void**)&g_path_get_dirname, "g_path_get_dirname");
		bindFunc(cast(void**)&g_path_is_absolute, "g_path_is_absolute");
		bindFunc(cast(void**)&g_path_skip_root, "g_path_skip_root");
		bindFunc(cast(void**)&g_pattern_match, "g_pattern_match");
		bindFunc(cast(void**)&g_pattern_match_simple, "g_pattern_match_simple");
		bindFunc(cast(void**)&g_pattern_match_string, "g_pattern_match_string");
		bindFunc(cast(void**)&g_pattern_spec_equal, "g_pattern_spec_equal");
		bindFunc(cast(void**)&g_pattern_spec_free, "g_pattern_spec_free");
		bindFunc(cast(void**)&g_pattern_spec_new, "g_pattern_spec_new");
		bindFunc(cast(void**)&g_pointer_bit_lock, "g_pointer_bit_lock");
		bindFunc(cast(void**)&g_pointer_bit_trylock, "g_pointer_bit_trylock");
		bindFunc(cast(void**)&g_pointer_bit_unlock, "g_pointer_bit_unlock");
		bindFunc(cast(void**)&g_poll, "g_poll");
		bindFunc(cast(void**)&g_prefix_error, "g_prefix_error");
		bindFunc(cast(void**)&g_print, "g_print");
		bindFunc(cast(void**)&g_printerr, "g_printerr");
		bindFunc(cast(void**)&g_printf, "g_printf");
		bindFunc(cast(void**)&g_printf_string_upper_bound, "g_printf_string_upper_bound");
		bindFunc(cast(void**)&g_private_get, "g_private_get");
		bindFunc(cast(void**)&g_private_replace, "g_private_replace");
		bindFunc(cast(void**)&g_private_set, "g_private_set");
		bindFunc(cast(void**)&g_propagate_error, "g_propagate_error");
		bindFunc(cast(void**)&g_propagate_prefixed_error, "g_propagate_prefixed_error");
		bindFunc(cast(void**)&g_ptr_array_add, "g_ptr_array_add");
		bindFunc(cast(void**)&g_ptr_array_foreach, "g_ptr_array_foreach");
		bindFunc(cast(void**)&g_ptr_array_free, "g_ptr_array_free");
		bindFunc(cast(void**)&g_ptr_array_new, "g_ptr_array_new");
		bindFunc(cast(void**)&g_ptr_array_new_full, "g_ptr_array_new_full");
		bindFunc(cast(void**)&g_ptr_array_new_with_free_func, "g_ptr_array_new_with_free_func");
		bindFunc(cast(void**)&g_ptr_array_ref, "g_ptr_array_ref");
		bindFunc(cast(void**)&g_ptr_array_remove, "g_ptr_array_remove");
		bindFunc(cast(void**)&g_ptr_array_remove_fast, "g_ptr_array_remove_fast");
		bindFunc(cast(void**)&g_ptr_array_remove_index, "g_ptr_array_remove_index");
		bindFunc(cast(void**)&g_ptr_array_remove_index_fast, "g_ptr_array_remove_index_fast");
		bindFunc(cast(void**)&g_ptr_array_remove_range, "g_ptr_array_remove_range");
		bindFunc(cast(void**)&g_ptr_array_set_free_func, "g_ptr_array_set_free_func");
		bindFunc(cast(void**)&g_ptr_array_set_size, "g_ptr_array_set_size");
		bindFunc(cast(void**)&g_ptr_array_sized_new, "g_ptr_array_sized_new");
		bindFunc(cast(void**)&g_ptr_array_sort, "g_ptr_array_sort");
		bindFunc(cast(void**)&g_ptr_array_sort_with_data, "g_ptr_array_sort_with_data");
		bindFunc(cast(void**)&g_ptr_array_unref, "g_ptr_array_unref");
		bindFunc(cast(void**)&g_qsort_with_data, "g_qsort_with_data");
		bindFunc(cast(void**)&g_quark_from_static_string, "g_quark_from_static_string");
		bindFunc(cast(void**)&g_quark_from_string, "g_quark_from_string");
		bindFunc(cast(void**)&g_quark_to_string, "g_quark_to_string");
		bindFunc(cast(void**)&g_quark_try_string, "g_quark_try_string");
		bindFunc(cast(void**)&g_queue_clear, "g_queue_clear");
		bindFunc(cast(void**)&g_queue_copy, "g_queue_copy");
		bindFunc(cast(void**)&g_queue_delete_link, "g_queue_delete_link");
		bindFunc(cast(void**)&g_queue_find, "g_queue_find");
		bindFunc(cast(void**)&g_queue_find_custom, "g_queue_find_custom");
		bindFunc(cast(void**)&g_queue_foreach, "g_queue_foreach");
		bindFunc(cast(void**)&g_queue_free, "g_queue_free");
		bindFunc(cast(void**)&g_queue_free_full, "g_queue_free_full");
		bindFunc(cast(void**)&g_queue_get_length, "g_queue_get_length");
		bindFunc(cast(void**)&g_queue_index, "g_queue_index");
		bindFunc(cast(void**)&g_queue_init, "g_queue_init");
		bindFunc(cast(void**)&g_queue_insert_after, "g_queue_insert_after");
		bindFunc(cast(void**)&g_queue_insert_before, "g_queue_insert_before");
		bindFunc(cast(void**)&g_queue_insert_sorted, "g_queue_insert_sorted");
		bindFunc(cast(void**)&g_queue_is_empty, "g_queue_is_empty");
		bindFunc(cast(void**)&g_queue_link_index, "g_queue_link_index");
		bindFunc(cast(void**)&g_queue_new, "g_queue_new");
		bindFunc(cast(void**)&g_queue_peek_head, "g_queue_peek_head");
		bindFunc(cast(void**)&g_queue_peek_head_link, "g_queue_peek_head_link");
		bindFunc(cast(void**)&g_queue_peek_nth, "g_queue_peek_nth");
		bindFunc(cast(void**)&g_queue_peek_nth_link, "g_queue_peek_nth_link");
		bindFunc(cast(void**)&g_queue_peek_tail, "g_queue_peek_tail");
		bindFunc(cast(void**)&g_queue_peek_tail_link, "g_queue_peek_tail_link");
		bindFunc(cast(void**)&g_queue_pop_head, "g_queue_pop_head");
		bindFunc(cast(void**)&g_queue_pop_head_link, "g_queue_pop_head_link");
		bindFunc(cast(void**)&g_queue_pop_nth, "g_queue_pop_nth");
		bindFunc(cast(void**)&g_queue_pop_nth_link, "g_queue_pop_nth_link");
		bindFunc(cast(void**)&g_queue_pop_tail, "g_queue_pop_tail");
		bindFunc(cast(void**)&g_queue_pop_tail_link, "g_queue_pop_tail_link");
		bindFunc(cast(void**)&g_queue_push_head, "g_queue_push_head");
		bindFunc(cast(void**)&g_queue_push_head_link, "g_queue_push_head_link");
		bindFunc(cast(void**)&g_queue_push_nth, "g_queue_push_nth");
		bindFunc(cast(void**)&g_queue_push_nth_link, "g_queue_push_nth_link");
		bindFunc(cast(void**)&g_queue_push_tail, "g_queue_push_tail");
		bindFunc(cast(void**)&g_queue_push_tail_link, "g_queue_push_tail_link");
		bindFunc(cast(void**)&g_queue_remove, "g_queue_remove");
		bindFunc(cast(void**)&g_queue_remove_all, "g_queue_remove_all");
		bindFunc(cast(void**)&g_queue_reverse, "g_queue_reverse");
		bindFunc(cast(void**)&g_queue_sort, "g_queue_sort");
		bindFunc(cast(void**)&g_queue_unlink, "g_queue_unlink");
		bindFunc(cast(void**)&g_rand_copy, "g_rand_copy");
		bindFunc(cast(void**)&g_rand_double, "g_rand_double");
		bindFunc(cast(void**)&g_rand_double_range, "g_rand_double_range");
		bindFunc(cast(void**)&g_rand_free, "g_rand_free");
		bindFunc(cast(void**)&g_rand_int, "g_rand_int");
		bindFunc(cast(void**)&g_rand_int_range, "g_rand_int_range");
		bindFunc(cast(void**)&g_rand_new, "g_rand_new");
		bindFunc(cast(void**)&g_rand_new_with_seed, "g_rand_new_with_seed");
		bindFunc(cast(void**)&g_rand_new_with_seed_array, "g_rand_new_with_seed_array");
		bindFunc(cast(void**)&g_rand_set_seed, "g_rand_set_seed");
		bindFunc(cast(void**)&g_rand_set_seed_array, "g_rand_set_seed_array");
		bindFunc(cast(void**)&g_random_double, "g_random_double");
		bindFunc(cast(void**)&g_random_double_range, "g_random_double_range");
		bindFunc(cast(void**)&g_random_int, "g_random_int");
		bindFunc(cast(void**)&g_random_int_range, "g_random_int_range");
		bindFunc(cast(void**)&g_random_set_seed, "g_random_set_seed");
		bindFunc(cast(void**)&g_realloc, "g_realloc");
		bindFunc(cast(void**)&g_realloc_n, "g_realloc_n");
		bindFunc(cast(void**)&g_rec_mutex_clear, "g_rec_mutex_clear");
		bindFunc(cast(void**)&g_rec_mutex_init, "g_rec_mutex_init");
		bindFunc(cast(void**)&g_rec_mutex_lock, "g_rec_mutex_lock");
		bindFunc(cast(void**)&g_rec_mutex_trylock, "g_rec_mutex_trylock");
		bindFunc(cast(void**)&g_rec_mutex_unlock, "g_rec_mutex_unlock");
		bindFunc(cast(void**)&g_regex_check_replacement, "g_regex_check_replacement");
		bindFunc(cast(void**)&g_regex_error_quark, "g_regex_error_quark");
		bindFunc(cast(void**)&g_regex_escape_nul, "g_regex_escape_nul");
		bindFunc(cast(void**)&g_regex_escape_string, "g_regex_escape_string");
		bindFunc(cast(void**)&g_regex_get_capture_count, "g_regex_get_capture_count");
		bindFunc(cast(void**)&g_regex_get_compile_flags, "g_regex_get_compile_flags");
		bindFunc(cast(void**)&g_regex_get_match_flags, "g_regex_get_match_flags");
		bindFunc(cast(void**)&g_regex_get_max_backref, "g_regex_get_max_backref");
		bindFunc(cast(void**)&g_regex_get_pattern, "g_regex_get_pattern");
		bindFunc(cast(void**)&g_regex_get_string_number, "g_regex_get_string_number");
		bindFunc(cast(void**)&g_regex_match, "g_regex_match");
		bindFunc(cast(void**)&g_regex_match_all, "g_regex_match_all");
		bindFunc(cast(void**)&g_regex_match_all_full, "g_regex_match_all_full");
		bindFunc(cast(void**)&g_regex_match_full, "g_regex_match_full");
		bindFunc(cast(void**)&g_regex_match_simple, "g_regex_match_simple");
		bindFunc(cast(void**)&g_regex_new, "g_regex_new");
		bindFunc(cast(void**)&g_regex_ref, "g_regex_ref");
		bindFunc(cast(void**)&g_regex_replace, "g_regex_replace");
		bindFunc(cast(void**)&g_regex_replace_eval, "g_regex_replace_eval");
		bindFunc(cast(void**)&g_regex_replace_literal, "g_regex_replace_literal");
		bindFunc(cast(void**)&g_regex_split, "g_regex_split");
		bindFunc(cast(void**)&g_regex_split_full, "g_regex_split_full");
		bindFunc(cast(void**)&g_regex_split_simple, "g_regex_split_simple");
		bindFunc(cast(void**)&g_regex_unref, "g_regex_unref");
		bindFunc(cast(void**)&g_reload_user_special_dirs_cache, "g_reload_user_special_dirs_cache");
		bindFunc(cast(void**)&g_return_if_fail_warning, "g_return_if_fail_warning");
		bindFunc(cast(void**)&g_rmdir, "g_rmdir");
		bindFunc(cast(void**)&g_rw_lock_clear, "g_rw_lock_clear");
		bindFunc(cast(void**)&g_rw_lock_init, "g_rw_lock_init");
		bindFunc(cast(void**)&g_rw_lock_reader_lock, "g_rw_lock_reader_lock");
		bindFunc(cast(void**)&g_rw_lock_reader_trylock, "g_rw_lock_reader_trylock");
		bindFunc(cast(void**)&g_rw_lock_reader_unlock, "g_rw_lock_reader_unlock");
		bindFunc(cast(void**)&g_rw_lock_writer_lock, "g_rw_lock_writer_lock");
		bindFunc(cast(void**)&g_rw_lock_writer_trylock, "g_rw_lock_writer_trylock");
		bindFunc(cast(void**)&g_rw_lock_writer_unlock, "g_rw_lock_writer_unlock");
		bindFunc(cast(void**)&g_scanner_cur_line, "g_scanner_cur_line");
		bindFunc(cast(void**)&g_scanner_cur_position, "g_scanner_cur_position");
		bindFunc(cast(void**)&g_scanner_cur_token, "g_scanner_cur_token");
		bindFunc(cast(void**)&g_scanner_cur_value, "g_scanner_cur_value");
		bindFunc(cast(void**)&g_scanner_destroy, "g_scanner_destroy");
		bindFunc(cast(void**)&g_scanner_eof, "g_scanner_eof");
		bindFunc(cast(void**)&g_scanner_error, "g_scanner_error");
		bindFunc(cast(void**)&g_scanner_get_next_token, "g_scanner_get_next_token");
		bindFunc(cast(void**)&g_scanner_input_file, "g_scanner_input_file");
		bindFunc(cast(void**)&g_scanner_input_text, "g_scanner_input_text");
		bindFunc(cast(void**)&g_scanner_lookup_symbol, "g_scanner_lookup_symbol");
		bindFunc(cast(void**)&g_scanner_new, "g_scanner_new");
		bindFunc(cast(void**)&g_scanner_peek_next_token, "g_scanner_peek_next_token");
		bindFunc(cast(void**)&g_scanner_scope_add_symbol, "g_scanner_scope_add_symbol");
		bindFunc(cast(void**)&g_scanner_scope_foreach_symbol, "g_scanner_scope_foreach_symbol");
		bindFunc(cast(void**)&g_scanner_scope_lookup_symbol, "g_scanner_scope_lookup_symbol");
		bindFunc(cast(void**)&g_scanner_scope_remove_symbol, "g_scanner_scope_remove_symbol");
		bindFunc(cast(void**)&g_scanner_set_scope, "g_scanner_set_scope");
		bindFunc(cast(void**)&g_scanner_sync_file_offset, "g_scanner_sync_file_offset");
		bindFunc(cast(void**)&g_scanner_unexp_token, "g_scanner_unexp_token");
		bindFunc(cast(void**)&g_scanner_warn, "g_scanner_warn");
		bindFunc(cast(void**)&g_sequence_append, "g_sequence_append");
		bindFunc(cast(void**)&g_sequence_foreach, "g_sequence_foreach");
		bindFunc(cast(void**)&g_sequence_foreach_range, "g_sequence_foreach_range");
		bindFunc(cast(void**)&g_sequence_free, "g_sequence_free");
		bindFunc(cast(void**)&g_sequence_get, "g_sequence_get");
		bindFunc(cast(void**)&g_sequence_get_begin_iter, "g_sequence_get_begin_iter");
		bindFunc(cast(void**)&g_sequence_get_end_iter, "g_sequence_get_end_iter");
		bindFunc(cast(void**)&g_sequence_get_iter_at_pos, "g_sequence_get_iter_at_pos");
		bindFunc(cast(void**)&g_sequence_get_length, "g_sequence_get_length");
		bindFunc(cast(void**)&g_sequence_insert_before, "g_sequence_insert_before");
		bindFunc(cast(void**)&g_sequence_insert_sorted, "g_sequence_insert_sorted");
		bindFunc(cast(void**)&g_sequence_insert_sorted_iter, "g_sequence_insert_sorted_iter");
		bindFunc(cast(void**)&g_sequence_iter_compare, "g_sequence_iter_compare");
		bindFunc(cast(void**)&g_sequence_iter_get_position, "g_sequence_iter_get_position");
		bindFunc(cast(void**)&g_sequence_iter_get_sequence, "g_sequence_iter_get_sequence");
		bindFunc(cast(void**)&g_sequence_iter_is_begin, "g_sequence_iter_is_begin");
		bindFunc(cast(void**)&g_sequence_iter_is_end, "g_sequence_iter_is_end");
		bindFunc(cast(void**)&g_sequence_iter_move, "g_sequence_iter_move");
		bindFunc(cast(void**)&g_sequence_iter_next, "g_sequence_iter_next");
		bindFunc(cast(void**)&g_sequence_iter_prev, "g_sequence_iter_prev");
		bindFunc(cast(void**)&g_sequence_lookup, "g_sequence_lookup");
		bindFunc(cast(void**)&g_sequence_lookup_iter, "g_sequence_lookup_iter");
		bindFunc(cast(void**)&g_sequence_move, "g_sequence_move");
		bindFunc(cast(void**)&g_sequence_move_range, "g_sequence_move_range");
		bindFunc(cast(void**)&g_sequence_new, "g_sequence_new");
		bindFunc(cast(void**)&g_sequence_prepend, "g_sequence_prepend");
		bindFunc(cast(void**)&g_sequence_range_get_midpoint, "g_sequence_range_get_midpoint");
		bindFunc(cast(void**)&g_sequence_remove, "g_sequence_remove");
		bindFunc(cast(void**)&g_sequence_remove_range, "g_sequence_remove_range");
		bindFunc(cast(void**)&g_sequence_search, "g_sequence_search");
		bindFunc(cast(void**)&g_sequence_search_iter, "g_sequence_search_iter");
		bindFunc(cast(void**)&g_sequence_set, "g_sequence_set");
		bindFunc(cast(void**)&g_sequence_sort, "g_sequence_sort");
		bindFunc(cast(void**)&g_sequence_sort_changed, "g_sequence_sort_changed");
		bindFunc(cast(void**)&g_sequence_sort_changed_iter, "g_sequence_sort_changed_iter");
		bindFunc(cast(void**)&g_sequence_sort_iter, "g_sequence_sort_iter");
		bindFunc(cast(void**)&g_sequence_swap, "g_sequence_swap");
		bindFunc(cast(void**)&g_set_application_name, "g_set_application_name");
		bindFunc(cast(void**)&g_set_error, "g_set_error");
		bindFunc(cast(void**)&g_set_error_literal, "g_set_error_literal");
		bindFunc(cast(void**)&g_set_prgname, "g_set_prgname");
		bindFunc(cast(void**)&g_set_print_handler, "g_set_print_handler");
		bindFunc(cast(void**)&g_set_printerr_handler, "g_set_printerr_handler");
		bindFunc(cast(void**)&g_setenv, "g_setenv");
		bindFunc(cast(void**)&g_shell_error_quark, "g_shell_error_quark");
		bindFunc(cast(void**)&g_shell_parse_argv, "g_shell_parse_argv");
		bindFunc(cast(void**)&g_shell_quote, "g_shell_quote");
		bindFunc(cast(void**)&g_shell_unquote, "g_shell_unquote");
		bindFunc(cast(void**)&g_slice_alloc, "g_slice_alloc");
		bindFunc(cast(void**)&g_slice_alloc0, "g_slice_alloc0");
		bindFunc(cast(void**)&g_slice_copy, "g_slice_copy");
		bindFunc(cast(void**)&g_slice_free1, "g_slice_free1");
		bindFunc(cast(void**)&g_slice_free_chain_with_offset, "g_slice_free_chain_with_offset");
		bindFunc(cast(void**)&g_slice_get_config, "g_slice_get_config");
		bindFunc(cast(void**)&g_slice_get_config_state, "g_slice_get_config_state");
		bindFunc(cast(void**)&g_slice_set_config, "g_slice_set_config");
		bindFunc(cast(void**)&g_slist_alloc, "g_slist_alloc");
		bindFunc(cast(void**)&g_slist_append, "g_slist_append");
		bindFunc(cast(void**)&g_slist_concat, "g_slist_concat");
		bindFunc(cast(void**)&g_slist_copy, "g_slist_copy");
		bindFunc(cast(void**)&g_slist_delete_link, "g_slist_delete_link");
		bindFunc(cast(void**)&g_slist_find, "g_slist_find");
		bindFunc(cast(void**)&g_slist_find_custom, "g_slist_find_custom");
		bindFunc(cast(void**)&g_slist_foreach, "g_slist_foreach");
		bindFunc(cast(void**)&g_slist_free, "g_slist_free");
		bindFunc(cast(void**)&g_slist_free_1, "g_slist_free_1");
		bindFunc(cast(void**)&g_slist_free_full, "g_slist_free_full");
		bindFunc(cast(void**)&g_slist_index, "g_slist_index");
		bindFunc(cast(void**)&g_slist_insert, "g_slist_insert");
		bindFunc(cast(void**)&g_slist_insert_before, "g_slist_insert_before");
		bindFunc(cast(void**)&g_slist_insert_sorted, "g_slist_insert_sorted");
		bindFunc(cast(void**)&g_slist_insert_sorted_with_data, "g_slist_insert_sorted_with_data");
		bindFunc(cast(void**)&g_slist_last, "g_slist_last");
		bindFunc(cast(void**)&g_slist_length, "g_slist_length");
		bindFunc(cast(void**)&g_slist_nth, "g_slist_nth");
		bindFunc(cast(void**)&g_slist_nth_data, "g_slist_nth_data");
		bindFunc(cast(void**)&g_slist_position, "g_slist_position");
		bindFunc(cast(void**)&g_slist_prepend, "g_slist_prepend");
		bindFunc(cast(void**)&g_slist_remove, "g_slist_remove");
		bindFunc(cast(void**)&g_slist_remove_all, "g_slist_remove_all");
		bindFunc(cast(void**)&g_slist_remove_link, "g_slist_remove_link");
		bindFunc(cast(void**)&g_slist_reverse, "g_slist_reverse");
		bindFunc(cast(void**)&g_slist_sort, "g_slist_sort");
		bindFunc(cast(void**)&g_slist_sort_with_data, "g_slist_sort_with_data");
		bindFunc(cast(void**)&g_snprintf, "g_snprintf");
		bindFunc(cast(void**)&g_source_add_child_source, "g_source_add_child_source");
		bindFunc(cast(void**)&g_source_add_poll, "g_source_add_poll");
		bindFunc(cast(void**)&g_source_attach, "g_source_attach");
		bindFunc(cast(void**)&g_source_destroy, "g_source_destroy");
		bindFunc(cast(void**)&g_source_get_can_recurse, "g_source_get_can_recurse");
		bindFunc(cast(void**)&g_source_get_context, "g_source_get_context");
		bindFunc(cast(void**)&g_source_get_current_time, "g_source_get_current_time");
		bindFunc(cast(void**)&g_source_get_id, "g_source_get_id");
		bindFunc(cast(void**)&g_source_get_name, "g_source_get_name");
		bindFunc(cast(void**)&g_source_get_priority, "g_source_get_priority");
		bindFunc(cast(void**)&g_source_get_time, "g_source_get_time");
		bindFunc(cast(void**)&g_source_is_destroyed, "g_source_is_destroyed");
		bindFunc(cast(void**)&g_source_new, "g_source_new");
		bindFunc(cast(void**)&g_source_ref, "g_source_ref");
		bindFunc(cast(void**)&g_source_remove, "g_source_remove");
		bindFunc(cast(void**)&g_source_remove_by_funcs_user_data, "g_source_remove_by_funcs_user_data");
		bindFunc(cast(void**)&g_source_remove_by_user_data, "g_source_remove_by_user_data");
		bindFunc(cast(void**)&g_source_remove_child_source, "g_source_remove_child_source");
		bindFunc(cast(void**)&g_source_remove_poll, "g_source_remove_poll");
		bindFunc(cast(void**)&g_source_set_callback, "g_source_set_callback");
		bindFunc(cast(void**)&g_source_set_callback_indirect, "g_source_set_callback_indirect");
		bindFunc(cast(void**)&g_source_set_can_recurse, "g_source_set_can_recurse");
		bindFunc(cast(void**)&g_source_set_funcs, "g_source_set_funcs");
		bindFunc(cast(void**)&g_source_set_name, "g_source_set_name");
		bindFunc(cast(void**)&g_source_set_name_by_id, "g_source_set_name_by_id");
		bindFunc(cast(void**)&g_source_set_priority, "g_source_set_priority");
		bindFunc(cast(void**)&g_source_unref, "g_source_unref");
		bindFunc(cast(void**)&g_spaced_primes_closest, "g_spaced_primes_closest");
		bindFunc(cast(void**)&g_spawn_async, "g_spawn_async");
		bindFunc(cast(void**)&g_spawn_async_with_pipes, "g_spawn_async_with_pipes");
		bindFunc(cast(void**)&g_spawn_close_pid, "g_spawn_close_pid");
		bindFunc(cast(void**)&g_spawn_command_line_async, "g_spawn_command_line_async");
		bindFunc(cast(void**)&g_spawn_command_line_sync, "g_spawn_command_line_sync");
		bindFunc(cast(void**)&g_spawn_error_quark, "g_spawn_error_quark");
		bindFunc(cast(void**)&g_spawn_sync, "g_spawn_sync");
		bindFunc(cast(void**)&g_sprintf, "g_sprintf");
		bindFunc(cast(void**)&g_stpcpy, "g_stpcpy");
		bindFunc(cast(void**)&g_str_equal, "g_str_equal");
		bindFunc(cast(void**)&g_str_has_prefix, "g_str_has_prefix");
		bindFunc(cast(void**)&g_str_has_suffix, "g_str_has_suffix");
		bindFunc(cast(void**)&g_str_hash, "g_str_hash");
		bindFunc(cast(void**)&g_strcanon, "g_strcanon");
		bindFunc(cast(void**)&g_strcasecmp, "g_strcasecmp");
		bindFunc(cast(void**)&g_strchomp, "g_strchomp");
		bindFunc(cast(void**)&g_strchug, "g_strchug");
		bindFunc(cast(void**)&g_strcmp0, "g_strcmp0");
		bindFunc(cast(void**)&g_strcompress, "g_strcompress");
		bindFunc(cast(void**)&g_strconcat, "g_strconcat");
		bindFunc(cast(void**)&g_strdelimit, "g_strdelimit");
		bindFunc(cast(void**)&g_strdown, "g_strdown");
		bindFunc(cast(void**)&g_strdup, "g_strdup");
		bindFunc(cast(void**)&g_strdup_printf, "g_strdup_printf");
		bindFunc(cast(void**)&g_strdup_vprintf, "g_strdup_vprintf");
		bindFunc(cast(void**)&g_strdupv, "g_strdupv");
		bindFunc(cast(void**)&g_strerror, "g_strerror");
		bindFunc(cast(void**)&g_strescape, "g_strescape");
		bindFunc(cast(void**)&g_strfreev, "g_strfreev");
		bindFunc(cast(void**)&g_string_append, "g_string_append");
		bindFunc(cast(void**)&g_string_append_c, "g_string_append_c");
		bindFunc(cast(void**)&g_string_append_len, "g_string_append_len");
		bindFunc(cast(void**)&g_string_append_printf, "g_string_append_printf");
		bindFunc(cast(void**)&g_string_append_unichar, "g_string_append_unichar");
		bindFunc(cast(void**)&g_string_append_uri_escaped, "g_string_append_uri_escaped");
		bindFunc(cast(void**)&g_string_append_vprintf, "g_string_append_vprintf");
		bindFunc(cast(void**)&g_string_ascii_down, "g_string_ascii_down");
		bindFunc(cast(void**)&g_string_ascii_up, "g_string_ascii_up");
		bindFunc(cast(void**)&g_string_assign, "g_string_assign");
		bindFunc(cast(void**)&g_string_chunk_clear, "g_string_chunk_clear");
		bindFunc(cast(void**)&g_string_chunk_free, "g_string_chunk_free");
		bindFunc(cast(void**)&g_string_chunk_insert, "g_string_chunk_insert");
		bindFunc(cast(void**)&g_string_chunk_insert_const, "g_string_chunk_insert_const");
		bindFunc(cast(void**)&g_string_chunk_insert_len, "g_string_chunk_insert_len");
		bindFunc(cast(void**)&g_string_chunk_new, "g_string_chunk_new");
		bindFunc(cast(void**)&g_string_down, "g_string_down");
		bindFunc(cast(void**)&g_string_equal, "g_string_equal");
		bindFunc(cast(void**)&g_string_erase, "g_string_erase");
		bindFunc(cast(void**)&g_string_free, "g_string_free");
		bindFunc(cast(void**)&g_string_hash, "g_string_hash");
		bindFunc(cast(void**)&g_string_insert, "g_string_insert");
		bindFunc(cast(void**)&g_string_insert_c, "g_string_insert_c");
		bindFunc(cast(void**)&g_string_insert_len, "g_string_insert_len");
		bindFunc(cast(void**)&g_string_insert_unichar, "g_string_insert_unichar");
		bindFunc(cast(void**)&g_string_new, "g_string_new");
		bindFunc(cast(void**)&g_string_new_len, "g_string_new_len");
		bindFunc(cast(void**)&g_string_overwrite, "g_string_overwrite");
		bindFunc(cast(void**)&g_string_overwrite_len, "g_string_overwrite_len");
		bindFunc(cast(void**)&g_string_prepend, "g_string_prepend");
		bindFunc(cast(void**)&g_string_prepend_c, "g_string_prepend_c");
		bindFunc(cast(void**)&g_string_prepend_len, "g_string_prepend_len");
		bindFunc(cast(void**)&g_string_prepend_unichar, "g_string_prepend_unichar");
		bindFunc(cast(void**)&g_string_printf, "g_string_printf");
		bindFunc(cast(void**)&g_string_set_size, "g_string_set_size");
		bindFunc(cast(void**)&g_string_sized_new, "g_string_sized_new");
		bindFunc(cast(void**)&g_string_truncate, "g_string_truncate");
		bindFunc(cast(void**)&g_string_up, "g_string_up");
		bindFunc(cast(void**)&g_string_vprintf, "g_string_vprintf");
		bindFunc(cast(void**)&g_strip_context, "g_strip_context");
		bindFunc(cast(void**)&g_strjoin, "g_strjoin");
		bindFunc(cast(void**)&g_strjoinv, "g_strjoinv");
		bindFunc(cast(void**)&g_strlcat, "g_strlcat");
		bindFunc(cast(void**)&g_strlcpy, "g_strlcpy");
		bindFunc(cast(void**)&g_strncasecmp, "g_strncasecmp");
		bindFunc(cast(void**)&g_strndup, "g_strndup");
		bindFunc(cast(void**)&g_strnfill, "g_strnfill");
		bindFunc(cast(void**)&g_strreverse, "g_strreverse");
		bindFunc(cast(void**)&g_strrstr, "g_strrstr");
		bindFunc(cast(void**)&g_strrstr_len, "g_strrstr_len");
		bindFunc(cast(void**)&g_strsignal, "g_strsignal");
		bindFunc(cast(void**)&g_strsplit, "g_strsplit");
		bindFunc(cast(void**)&g_strsplit_set, "g_strsplit_set");
		bindFunc(cast(void**)&g_strstr_len, "g_strstr_len");
		bindFunc(cast(void**)&g_strtod, "g_strtod");
		bindFunc(cast(void**)&g_strup, "g_strup");
		bindFunc(cast(void**)&g_strv_length, "g_strv_length");
		bindFunc(cast(void**)&g_test_add_data_func, "g_test_add_data_func");
		bindFunc(cast(void**)&g_test_add_func, "g_test_add_func");
		bindFunc(cast(void**)&g_test_add_vtable, "g_test_add_vtable");
		bindFunc(cast(void**)&g_test_bug, "g_test_bug");
		bindFunc(cast(void**)&g_test_bug_base, "g_test_bug_base");
		bindFunc(cast(void**)&g_test_config_vars, "g_test_config_vars");
		bindFunc(cast(void**)&g_test_create_case, "g_test_create_case");
		bindFunc(cast(void**)&g_test_create_suite, "g_test_create_suite");
		bindFunc(cast(void**)&g_test_fail, "g_test_fail");
		bindFunc(cast(void**)&g_test_get_root, "g_test_get_root");
		bindFunc(cast(void**)&g_test_init, "g_test_init");
		bindFunc(cast(void**)&g_test_log_buffer_free, "g_test_log_buffer_free");
		bindFunc(cast(void**)&g_test_log_buffer_new, "g_test_log_buffer_new");
		bindFunc(cast(void**)&g_test_log_buffer_pop, "g_test_log_buffer_pop");
		bindFunc(cast(void**)&g_test_log_buffer_push, "g_test_log_buffer_push");
		bindFunc(cast(void**)&g_test_log_msg_free, "g_test_log_msg_free");
		bindFunc(cast(void**)&g_test_log_set_fatal_handler, "g_test_log_set_fatal_handler");
		bindFunc(cast(void**)&g_test_log_type_name, "g_test_log_type_name");
		bindFunc(cast(void**)&g_test_maximized_result, "g_test_maximized_result");
		bindFunc(cast(void**)&g_test_message, "g_test_message");
		bindFunc(cast(void**)&g_test_minimized_result, "g_test_minimized_result");
		bindFunc(cast(void**)&g_test_queue_destroy, "g_test_queue_destroy");
		bindFunc(cast(void**)&g_test_queue_free, "g_test_queue_free");
		bindFunc(cast(void**)&g_test_rand_double, "g_test_rand_double");
		bindFunc(cast(void**)&g_test_rand_double_range, "g_test_rand_double_range");
		bindFunc(cast(void**)&g_test_rand_int, "g_test_rand_int");
		bindFunc(cast(void**)&g_test_rand_int_range, "g_test_rand_int_range");
		bindFunc(cast(void**)&g_test_run, "g_test_run");
		bindFunc(cast(void**)&g_test_run_suite, "g_test_run_suite");
		bindFunc(cast(void**)&g_test_suite_add, "g_test_suite_add");
		bindFunc(cast(void**)&g_test_suite_add_suite, "g_test_suite_add_suite");
		bindFunc(cast(void**)&g_test_timer_elapsed, "g_test_timer_elapsed");
		bindFunc(cast(void**)&g_test_timer_last, "g_test_timer_last");
		bindFunc(cast(void**)&g_test_timer_start, "g_test_timer_start");
		bindFunc(cast(void**)&g_test_trap_assertions, "g_test_trap_assertions");
		bindFunc(cast(void**)&g_test_trap_fork, "g_test_trap_fork");
		bindFunc(cast(void**)&g_test_trap_has_passed, "g_test_trap_has_passed");
		bindFunc(cast(void**)&g_test_trap_reached_timeout, "g_test_trap_reached_timeout");
		bindFunc(cast(void**)&g_thread_error_quark, "g_thread_error_quark");
		bindFunc(cast(void**)&g_thread_exit, "g_thread_exit");
		bindFunc(cast(void**)&g_thread_join, "g_thread_join");
		bindFunc(cast(void**)&g_thread_new, "g_thread_new");
		bindFunc(cast(void**)&g_thread_pool_free, "g_thread_pool_free");
		bindFunc(cast(void**)&g_thread_pool_get_max_idle_time, "g_thread_pool_get_max_idle_time");
		bindFunc(cast(void**)&g_thread_pool_get_max_threads, "g_thread_pool_get_max_threads");
		bindFunc(cast(void**)&g_thread_pool_get_max_unused_threads, "g_thread_pool_get_max_unused_threads");
		bindFunc(cast(void**)&g_thread_pool_get_num_threads, "g_thread_pool_get_num_threads");
		bindFunc(cast(void**)&g_thread_pool_get_num_unused_threads, "g_thread_pool_get_num_unused_threads");
		bindFunc(cast(void**)&g_thread_pool_new, "g_thread_pool_new");
		bindFunc(cast(void**)&g_thread_pool_push, "g_thread_pool_push");
		bindFunc(cast(void**)&g_thread_pool_set_max_idle_time, "g_thread_pool_set_max_idle_time");
		bindFunc(cast(void**)&g_thread_pool_set_max_threads, "g_thread_pool_set_max_threads");
		bindFunc(cast(void**)&g_thread_pool_set_max_unused_threads, "g_thread_pool_set_max_unused_threads");
		bindFunc(cast(void**)&g_thread_pool_set_sort_function, "g_thread_pool_set_sort_function");
		bindFunc(cast(void**)&g_thread_pool_stop_unused_threads, "g_thread_pool_stop_unused_threads");
		bindFunc(cast(void**)&g_thread_pool_unprocessed, "g_thread_pool_unprocessed");
		bindFunc(cast(void**)&g_thread_ref, "g_thread_ref");
		bindFunc(cast(void**)&g_thread_self, "g_thread_self");
		bindFunc(cast(void**)&g_thread_try_new, "g_thread_try_new");
		bindFunc(cast(void**)&g_thread_unref, "g_thread_unref");
		bindFunc(cast(void**)&g_thread_yield, "g_thread_yield");
		bindFunc(cast(void**)&g_time_val_add, "g_time_val_add");
		bindFunc(cast(void**)&g_time_val_from_iso8601, "g_time_val_from_iso8601");
		bindFunc(cast(void**)&g_time_val_to_iso8601, "g_time_val_to_iso8601");
		bindFunc(cast(void**)&g_time_zone_adjust_time, "g_time_zone_adjust_time");
		bindFunc(cast(void**)&g_time_zone_find_interval, "g_time_zone_find_interval");
		bindFunc(cast(void**)&g_time_zone_get_abbreviation, "g_time_zone_get_abbreviation");
		bindFunc(cast(void**)&g_time_zone_get_offset, "g_time_zone_get_offset");
		bindFunc(cast(void**)&g_time_zone_is_dst, "g_time_zone_is_dst");
		bindFunc(cast(void**)&g_time_zone_new, "g_time_zone_new");
		bindFunc(cast(void**)&g_time_zone_new_local, "g_time_zone_new_local");
		bindFunc(cast(void**)&g_time_zone_new_utc, "g_time_zone_new_utc");
		bindFunc(cast(void**)&g_time_zone_ref, "g_time_zone_ref");
		bindFunc(cast(void**)&g_time_zone_unref, "g_time_zone_unref");
		bindFunc(cast(void**)&g_timeout_add, "g_timeout_add");
		bindFunc(cast(void**)&g_timeout_add_full, "g_timeout_add_full");
		bindFunc(cast(void**)&g_timeout_add_seconds, "g_timeout_add_seconds");
		bindFunc(cast(void**)&g_timeout_add_seconds_full, "g_timeout_add_seconds_full");
		bindFunc(cast(void**)&g_timeout_funcs, "g_timeout_funcs");
		bindFunc(cast(void**)&g_timeout_source_new, "g_timeout_source_new");
		bindFunc(cast(void**)&g_timeout_source_new_seconds, "g_timeout_source_new_seconds");
		bindFunc(cast(void**)&g_timer_continue, "g_timer_continue");
		bindFunc(cast(void**)&g_timer_destroy, "g_timer_destroy");
		bindFunc(cast(void**)&g_timer_elapsed, "g_timer_elapsed");
		bindFunc(cast(void**)&g_timer_new, "g_timer_new");
		bindFunc(cast(void**)&g_timer_reset, "g_timer_reset");
		bindFunc(cast(void**)&g_timer_start, "g_timer_start");
		bindFunc(cast(void**)&g_timer_stop, "g_timer_stop");
		bindFunc(cast(void**)&g_trash_stack_height, "g_trash_stack_height");
		bindFunc(cast(void**)&g_trash_stack_peek, "g_trash_stack_peek");
		bindFunc(cast(void**)&g_trash_stack_pop, "g_trash_stack_pop");
		bindFunc(cast(void**)&g_trash_stack_push, "g_trash_stack_push");
		bindFunc(cast(void**)&g_tree_destroy, "g_tree_destroy");
		bindFunc(cast(void**)&g_tree_foreach, "g_tree_foreach");
		bindFunc(cast(void**)&g_tree_height, "g_tree_height");
		bindFunc(cast(void**)&g_tree_insert, "g_tree_insert");
		bindFunc(cast(void**)&g_tree_lookup, "g_tree_lookup");
		bindFunc(cast(void**)&g_tree_lookup_extended, "g_tree_lookup_extended");
		bindFunc(cast(void**)&g_tree_new, "g_tree_new");
		bindFunc(cast(void**)&g_tree_new_full, "g_tree_new_full");
		bindFunc(cast(void**)&g_tree_new_with_data, "g_tree_new_with_data");
		bindFunc(cast(void**)&g_tree_nnodes, "g_tree_nnodes");
		bindFunc(cast(void**)&g_tree_ref, "g_tree_ref");
		bindFunc(cast(void**)&g_tree_remove, "g_tree_remove");
		bindFunc(cast(void**)&g_tree_replace, "g_tree_replace");
		bindFunc(cast(void**)&g_tree_search, "g_tree_search");
		bindFunc(cast(void**)&g_tree_steal, "g_tree_steal");
		bindFunc(cast(void**)&g_tree_traverse, "g_tree_traverse");
		bindFunc(cast(void**)&g_tree_unref, "g_tree_unref");
		bindFunc(cast(void**)&g_try_malloc, "g_try_malloc");
		bindFunc(cast(void**)&g_try_malloc0, "g_try_malloc0");
		bindFunc(cast(void**)&g_try_malloc0_n, "g_try_malloc0_n");
		bindFunc(cast(void**)&g_try_malloc_n, "g_try_malloc_n");
		bindFunc(cast(void**)&g_try_realloc, "g_try_realloc");
		bindFunc(cast(void**)&g_try_realloc_n, "g_try_realloc_n");
		bindFunc(cast(void**)&g_ucs4_to_utf16, "g_ucs4_to_utf16");
		bindFunc(cast(void**)&g_ucs4_to_utf8, "g_ucs4_to_utf8");
		bindFunc(cast(void**)&g_unichar_break_type, "g_unichar_break_type");
		bindFunc(cast(void**)&g_unichar_combining_class, "g_unichar_combining_class");
		bindFunc(cast(void**)&g_unichar_compose, "g_unichar_compose");
		bindFunc(cast(void**)&g_unichar_decompose, "g_unichar_decompose");
		bindFunc(cast(void**)&g_unichar_digit_value, "g_unichar_digit_value");
		bindFunc(cast(void**)&g_unichar_fully_decompose, "g_unichar_fully_decompose");
		bindFunc(cast(void**)&g_unichar_get_mirror_char, "g_unichar_get_mirror_char");
		bindFunc(cast(void**)&g_unichar_get_script, "g_unichar_get_script");
		bindFunc(cast(void**)&g_unichar_isalnum, "g_unichar_isalnum");
		bindFunc(cast(void**)&g_unichar_isalpha, "g_unichar_isalpha");
		bindFunc(cast(void**)&g_unichar_iscntrl, "g_unichar_iscntrl");
		bindFunc(cast(void**)&g_unichar_isdefined, "g_unichar_isdefined");
		bindFunc(cast(void**)&g_unichar_isdigit, "g_unichar_isdigit");
		bindFunc(cast(void**)&g_unichar_isgraph, "g_unichar_isgraph");
		bindFunc(cast(void**)&g_unichar_islower, "g_unichar_islower");
		bindFunc(cast(void**)&g_unichar_ismark, "g_unichar_ismark");
		bindFunc(cast(void**)&g_unichar_isprint, "g_unichar_isprint");
		bindFunc(cast(void**)&g_unichar_ispunct, "g_unichar_ispunct");
		bindFunc(cast(void**)&g_unichar_isspace, "g_unichar_isspace");
		bindFunc(cast(void**)&g_unichar_istitle, "g_unichar_istitle");
		bindFunc(cast(void**)&g_unichar_isupper, "g_unichar_isupper");
		bindFunc(cast(void**)&g_unichar_iswide, "g_unichar_iswide");
		bindFunc(cast(void**)&g_unichar_iswide_cjk, "g_unichar_iswide_cjk");
		bindFunc(cast(void**)&g_unichar_isxdigit, "g_unichar_isxdigit");
		bindFunc(cast(void**)&g_unichar_iszerowidth, "g_unichar_iszerowidth");
		bindFunc(cast(void**)&g_unichar_to_utf8, "g_unichar_to_utf8");
		bindFunc(cast(void**)&g_unichar_tolower, "g_unichar_tolower");
		bindFunc(cast(void**)&g_unichar_totitle, "g_unichar_totitle");
		bindFunc(cast(void**)&g_unichar_toupper, "g_unichar_toupper");
		bindFunc(cast(void**)&g_unichar_type, "g_unichar_type");
		bindFunc(cast(void**)&g_unichar_validate, "g_unichar_validate");
		bindFunc(cast(void**)&g_unichar_xdigit_value, "g_unichar_xdigit_value");
		bindFunc(cast(void**)&g_unicode_canonical_decomposition, "g_unicode_canonical_decomposition");
		bindFunc(cast(void**)&g_unicode_canonical_ordering, "g_unicode_canonical_ordering");
		bindFunc(cast(void**)&g_unicode_script_from_iso15924, "g_unicode_script_from_iso15924");
		bindFunc(cast(void**)&g_unicode_script_to_iso15924, "g_unicode_script_to_iso15924");
		bindFunc(cast(void**)&g_unlink, "g_unlink");
		bindFunc(cast(void**)&g_unsetenv, "g_unsetenv");
		bindFunc(cast(void**)&g_uri_escape_string, "g_uri_escape_string");
		bindFunc(cast(void**)&g_uri_list_extract_uris, "g_uri_list_extract_uris");
		bindFunc(cast(void**)&g_uri_parse_scheme, "g_uri_parse_scheme");
		bindFunc(cast(void**)&g_uri_unescape_segment, "g_uri_unescape_segment");
		bindFunc(cast(void**)&g_uri_unescape_string, "g_uri_unescape_string");
		bindFunc(cast(void**)&g_usleep, "g_usleep");
		bindFunc(cast(void**)&g_utf16_to_ucs4, "g_utf16_to_ucs4");
		bindFunc(cast(void**)&g_utf16_to_utf8, "g_utf16_to_utf8");
		bindFunc(cast(void**)&g_utf8_casefold, "g_utf8_casefold");
		bindFunc(cast(void**)&g_utf8_collate, "g_utf8_collate");
		bindFunc(cast(void**)&g_utf8_collate_key, "g_utf8_collate_key");
		bindFunc(cast(void**)&g_utf8_collate_key_for_filename, "g_utf8_collate_key_for_filename");
		bindFunc(cast(void**)&g_utf8_find_next_char, "g_utf8_find_next_char");
		bindFunc(cast(void**)&g_utf8_find_prev_char, "g_utf8_find_prev_char");
		bindFunc(cast(void**)&g_utf8_get_char, "g_utf8_get_char");
		bindFunc(cast(void**)&g_utf8_get_char_validated, "g_utf8_get_char_validated");
		bindFunc(cast(void**)&g_utf8_normalize, "g_utf8_normalize");
		bindFunc(cast(void**)&g_utf8_offset_to_pointer, "g_utf8_offset_to_pointer");
		bindFunc(cast(void**)&g_utf8_pointer_to_offset, "g_utf8_pointer_to_offset");
		bindFunc(cast(void**)&g_utf8_prev_char, "g_utf8_prev_char");
		bindFunc(cast(void**)&g_utf8_skip, "g_utf8_skip");
		bindFunc(cast(void**)&g_utf8_strchr, "g_utf8_strchr");
		bindFunc(cast(void**)&g_utf8_strdown, "g_utf8_strdown");
		bindFunc(cast(void**)&g_utf8_strlen, "g_utf8_strlen");
		bindFunc(cast(void**)&g_utf8_strncpy, "g_utf8_strncpy");
		bindFunc(cast(void**)&g_utf8_strrchr, "g_utf8_strrchr");
		bindFunc(cast(void**)&g_utf8_strreverse, "g_utf8_strreverse");
		bindFunc(cast(void**)&g_utf8_strup, "g_utf8_strup");
		bindFunc(cast(void**)&g_utf8_substring, "g_utf8_substring");
		bindFunc(cast(void**)&g_utf8_to_ucs4, "g_utf8_to_ucs4");
		bindFunc(cast(void**)&g_utf8_to_ucs4_fast, "g_utf8_to_ucs4_fast");
		bindFunc(cast(void**)&g_utf8_to_utf16, "g_utf8_to_utf16");
		bindFunc(cast(void**)&g_utf8_validate, "g_utf8_validate");
		bindFunc(cast(void**)&g_variant_builder_add, "g_variant_builder_add");
		bindFunc(cast(void**)&g_variant_builder_add_parsed, "g_variant_builder_add_parsed");
		bindFunc(cast(void**)&g_variant_builder_add_value, "g_variant_builder_add_value");
		bindFunc(cast(void**)&g_variant_builder_clear, "g_variant_builder_clear");
		bindFunc(cast(void**)&g_variant_builder_close, "g_variant_builder_close");
		bindFunc(cast(void**)&g_variant_builder_end, "g_variant_builder_end");
		bindFunc(cast(void**)&g_variant_builder_init, "g_variant_builder_init");
		bindFunc(cast(void**)&g_variant_builder_new, "g_variant_builder_new");
		bindFunc(cast(void**)&g_variant_builder_open, "g_variant_builder_open");
		bindFunc(cast(void**)&g_variant_builder_ref, "g_variant_builder_ref");
		bindFunc(cast(void**)&g_variant_builder_unref, "g_variant_builder_unref");
		bindFunc(cast(void**)&g_variant_byteswap, "g_variant_byteswap");
		bindFunc(cast(void**)&g_variant_classify, "g_variant_classify");
		bindFunc(cast(void**)&g_variant_compare, "g_variant_compare");
		bindFunc(cast(void**)&g_variant_dup_bytestring, "g_variant_dup_bytestring");
		bindFunc(cast(void**)&g_variant_dup_bytestring_array, "g_variant_dup_bytestring_array");
		bindFunc(cast(void**)&g_variant_dup_objv, "g_variant_dup_objv");
		bindFunc(cast(void**)&g_variant_dup_string, "g_variant_dup_string");
		bindFunc(cast(void**)&g_variant_dup_strv, "g_variant_dup_strv");
		bindFunc(cast(void**)&g_variant_equal, "g_variant_equal");
		bindFunc(cast(void**)&g_variant_get, "g_variant_get");
		bindFunc(cast(void**)&g_variant_get_boolean, "g_variant_get_boolean");
		bindFunc(cast(void**)&g_variant_get_byte, "g_variant_get_byte");
		bindFunc(cast(void**)&g_variant_get_bytestring, "g_variant_get_bytestring");
		bindFunc(cast(void**)&g_variant_get_bytestring_array, "g_variant_get_bytestring_array");
		bindFunc(cast(void**)&g_variant_get_child, "g_variant_get_child");
		bindFunc(cast(void**)&g_variant_get_child_value, "g_variant_get_child_value");
		bindFunc(cast(void**)&g_variant_get_data, "g_variant_get_data");
		bindFunc(cast(void**)&g_variant_get_double, "g_variant_get_double");
		bindFunc(cast(void**)&g_variant_get_fixed_array, "g_variant_get_fixed_array");
		bindFunc(cast(void**)&g_variant_get_handle, "g_variant_get_handle");
		bindFunc(cast(void**)&g_variant_get_int16, "g_variant_get_int16");
		bindFunc(cast(void**)&g_variant_get_int32, "g_variant_get_int32");
		bindFunc(cast(void**)&g_variant_get_int64, "g_variant_get_int64");
		bindFunc(cast(void**)&g_variant_get_maybe, "g_variant_get_maybe");
		bindFunc(cast(void**)&g_variant_get_normal_form, "g_variant_get_normal_form");
		bindFunc(cast(void**)&g_variant_get_objv, "g_variant_get_objv");
		bindFunc(cast(void**)&g_variant_get_size, "g_variant_get_size");
		bindFunc(cast(void**)&g_variant_get_string, "g_variant_get_string");
		bindFunc(cast(void**)&g_variant_get_strv, "g_variant_get_strv");
		bindFunc(cast(void**)&g_variant_get_type, "g_variant_get_type");
		bindFunc(cast(void**)&g_variant_get_type_string, "g_variant_get_type_string");
		bindFunc(cast(void**)&g_variant_get_uint16, "g_variant_get_uint16");
		bindFunc(cast(void**)&g_variant_get_uint32, "g_variant_get_uint32");
		bindFunc(cast(void**)&g_variant_get_uint64, "g_variant_get_uint64");
		bindFunc(cast(void**)&g_variant_get_va, "g_variant_get_va");
		bindFunc(cast(void**)&g_variant_get_variant, "g_variant_get_variant");
		bindFunc(cast(void**)&g_variant_hash, "g_variant_hash");
		bindFunc(cast(void**)&g_variant_is_container, "g_variant_is_container");
		bindFunc(cast(void**)&g_variant_is_floating, "g_variant_is_floating");
		bindFunc(cast(void**)&g_variant_is_normal_form, "g_variant_is_normal_form");
		bindFunc(cast(void**)&g_variant_is_object_path, "g_variant_is_object_path");
		bindFunc(cast(void**)&g_variant_is_of_type, "g_variant_is_of_type");
		bindFunc(cast(void**)&g_variant_is_signature, "g_variant_is_signature");
		bindFunc(cast(void**)&g_variant_iter_copy, "g_variant_iter_copy");
		bindFunc(cast(void**)&g_variant_iter_free, "g_variant_iter_free");
		bindFunc(cast(void**)&g_variant_iter_init, "g_variant_iter_init");
		bindFunc(cast(void**)&g_variant_iter_loop, "g_variant_iter_loop");
		bindFunc(cast(void**)&g_variant_iter_n_children, "g_variant_iter_n_children");
		bindFunc(cast(void**)&g_variant_iter_new, "g_variant_iter_new");
		bindFunc(cast(void**)&g_variant_iter_next, "g_variant_iter_next");
		bindFunc(cast(void**)&g_variant_iter_next_value, "g_variant_iter_next_value");
		bindFunc(cast(void**)&g_variant_lookup, "g_variant_lookup");
		bindFunc(cast(void**)&g_variant_lookup_value, "g_variant_lookup_value");
		bindFunc(cast(void**)&g_variant_n_children, "g_variant_n_children");
		bindFunc(cast(void**)&g_variant_new, "g_variant_new");
		bindFunc(cast(void**)&g_variant_new_array, "g_variant_new_array");
		bindFunc(cast(void**)&g_variant_new_boolean, "g_variant_new_boolean");
		bindFunc(cast(void**)&g_variant_new_byte, "g_variant_new_byte");
		bindFunc(cast(void**)&g_variant_new_bytestring, "g_variant_new_bytestring");
		bindFunc(cast(void**)&g_variant_new_bytestring_array, "g_variant_new_bytestring_array");
		bindFunc(cast(void**)&g_variant_new_dict_entry, "g_variant_new_dict_entry");
		bindFunc(cast(void**)&g_variant_new_double, "g_variant_new_double");
		bindFunc(cast(void**)&g_variant_new_fixed_array, "g_variant_new_fixed_array");
		bindFunc(cast(void**)&g_variant_new_from_data, "g_variant_new_from_data");
		bindFunc(cast(void**)&g_variant_new_handle, "g_variant_new_handle");
		bindFunc(cast(void**)&g_variant_new_int16, "g_variant_new_int16");
		bindFunc(cast(void**)&g_variant_new_int32, "g_variant_new_int32");
		bindFunc(cast(void**)&g_variant_new_int64, "g_variant_new_int64");
		bindFunc(cast(void**)&g_variant_new_maybe, "g_variant_new_maybe");
		bindFunc(cast(void**)&g_variant_new_object_path, "g_variant_new_object_path");
		bindFunc(cast(void**)&g_variant_new_objv, "g_variant_new_objv");
		bindFunc(cast(void**)&g_variant_new_parsed, "g_variant_new_parsed");
		bindFunc(cast(void**)&g_variant_new_parsed_va, "g_variant_new_parsed_va");
		bindFunc(cast(void**)&g_variant_new_signature, "g_variant_new_signature");
		bindFunc(cast(void**)&g_variant_new_string, "g_variant_new_string");
		bindFunc(cast(void**)&g_variant_new_strv, "g_variant_new_strv");
		bindFunc(cast(void**)&g_variant_new_tuple, "g_variant_new_tuple");
		bindFunc(cast(void**)&g_variant_new_uint16, "g_variant_new_uint16");
		bindFunc(cast(void**)&g_variant_new_uint32, "g_variant_new_uint32");
		bindFunc(cast(void**)&g_variant_new_uint64, "g_variant_new_uint64");
		bindFunc(cast(void**)&g_variant_new_va, "g_variant_new_va");
		bindFunc(cast(void**)&g_variant_new_variant, "g_variant_new_variant");
		bindFunc(cast(void**)&g_variant_parse, "g_variant_parse");
		bindFunc(cast(void**)&g_variant_parser_get_error_quark, "g_variant_parser_get_error_quark");
		bindFunc(cast(void**)&g_variant_print, "g_variant_print");
		bindFunc(cast(void**)&g_variant_print_string, "g_variant_print_string");
		bindFunc(cast(void**)&g_variant_ref, "g_variant_ref");
		bindFunc(cast(void**)&g_variant_ref_sink, "g_variant_ref_sink");
		bindFunc(cast(void**)&g_variant_store, "g_variant_store");
		bindFunc(cast(void**)&g_variant_take_ref, "g_variant_take_ref");
		bindFunc(cast(void**)&g_variant_type_checked_, "g_variant_type_checked_");
		bindFunc(cast(void**)&g_variant_type_copy, "g_variant_type_copy");
		bindFunc(cast(void**)&g_variant_type_dup_string, "g_variant_type_dup_string");
		bindFunc(cast(void**)&g_variant_type_element, "g_variant_type_element");
		bindFunc(cast(void**)&g_variant_type_equal, "g_variant_type_equal");
		bindFunc(cast(void**)&g_variant_type_first, "g_variant_type_first");
		bindFunc(cast(void**)&g_variant_type_free, "g_variant_type_free");
		bindFunc(cast(void**)&g_variant_type_get_string_length, "g_variant_type_get_string_length");
		bindFunc(cast(void**)&g_variant_type_hash, "g_variant_type_hash");
		bindFunc(cast(void**)&g_variant_type_is_array, "g_variant_type_is_array");
		bindFunc(cast(void**)&g_variant_type_is_basic, "g_variant_type_is_basic");
		bindFunc(cast(void**)&g_variant_type_is_container, "g_variant_type_is_container");
		bindFunc(cast(void**)&g_variant_type_is_definite, "g_variant_type_is_definite");
		bindFunc(cast(void**)&g_variant_type_is_dict_entry, "g_variant_type_is_dict_entry");
		bindFunc(cast(void**)&g_variant_type_is_maybe, "g_variant_type_is_maybe");
		bindFunc(cast(void**)&g_variant_type_is_subtype_of, "g_variant_type_is_subtype_of");
		bindFunc(cast(void**)&g_variant_type_is_tuple, "g_variant_type_is_tuple");
		bindFunc(cast(void**)&g_variant_type_is_variant, "g_variant_type_is_variant");
		bindFunc(cast(void**)&g_variant_type_key, "g_variant_type_key");
		bindFunc(cast(void**)&g_variant_type_n_items, "g_variant_type_n_items");
		bindFunc(cast(void**)&g_variant_type_new, "g_variant_type_new");
		bindFunc(cast(void**)&g_variant_type_new_array, "g_variant_type_new_array");
		bindFunc(cast(void**)&g_variant_type_new_dict_entry, "g_variant_type_new_dict_entry");
		bindFunc(cast(void**)&g_variant_type_new_maybe, "g_variant_type_new_maybe");
		bindFunc(cast(void**)&g_variant_type_new_tuple, "g_variant_type_new_tuple");
		bindFunc(cast(void**)&g_variant_type_next, "g_variant_type_next");
		bindFunc(cast(void**)&g_variant_type_peek_string, "g_variant_type_peek_string");
		bindFunc(cast(void**)&g_variant_type_string_is_valid, "g_variant_type_string_is_valid");
		bindFunc(cast(void**)&g_variant_type_string_scan, "g_variant_type_string_scan");
		bindFunc(cast(void**)&g_variant_type_value, "g_variant_type_value");
		bindFunc(cast(void**)&g_variant_unref, "g_variant_unref");
		bindFunc(cast(void**)&g_vasprintf, "g_vasprintf");
		bindFunc(cast(void**)&g_vfprintf, "g_vfprintf");
		bindFunc(cast(void**)&g_vprintf, "g_vprintf");
		bindFunc(cast(void**)&g_vsnprintf, "g_vsnprintf");
		bindFunc(cast(void**)&g_vsprintf, "g_vsprintf");
		bindFunc(cast(void**)&g_warn_message, "g_warn_message");
		bindFunc(cast(void**)&glib_binary_age, "glib_binary_age");
		bindFunc(cast(void**)&glib_check_version, "glib_check_version");
		bindFunc(cast(void**)&glib_interface_age, "glib_interface_age");
		bindFunc(cast(void**)&glib_major_version, "glib_major_version");
		bindFunc(cast(void**)&glib_mem_profiler_table, "glib_mem_profiler_table");
		bindFunc(cast(void**)&glib_micro_version, "glib_micro_version");
		bindFunc(cast(void**)&glib_minor_version, "glib_minor_version");

		bindFunc(cast(void**)&g_list_copy_deep, "g_list_copy_deep", false); // Only available > v2.34
		bindFunc(cast(void**)&g_mapped_file_get_bytes, "g_mapped_file_get_bytes", false); // Only available > v2.34
		bindFunc(cast(void**)&g_regex_get_has_cr_or_lf, "g_regex_get_has_cr_or_lf", false); // Only available > v2.34
		bindFunc(cast(void**)&g_slist_copy_deep, "g_slist_copy_deep", false); // Only available > v2.34 
		bindFunc(cast(void**)&g_spawn_check_exit_status, "g_spawn_check_exit_status", false); // Only available > v2.34
		bindFunc(cast(void**)&g_spawn_exit_error_quark, "g_spawn_exit_error_quark", false); // Only available > v2.34
		bindFunc(cast(void**)&g_string_free_to_bytes, "g_string_free_to_bytes", false); // Only available > v2.34
		bindFunc(cast(void**)&g_test_add_data_func_full, "g_test_add_data_func_full", false); // Only available > v2.34
		bindFunc(cast(void**)&g_test_assert_expected_messages_internal, "g_test_assert_expected_messages_internal", false); // Only available > v2.34
		bindFunc(cast(void**)&g_test_expect_message, "g_test_expect_message", false); // Only available > v2.34
		bindFunc(cast(void**)&g_variant_check_format_string, "g_variant_check_format_string", false); // Only available > v2.34

		version(Win32)
		{
				bindFunc(cast(void**)&g_io_channel_win32_get_fd, "g_io_channel_win32_get_fd");
				bindFunc(cast(void**)&g_io_channel_win32_make_pollfd, "g_io_channel_win32_make_pollfd");
				bindFunc(cast(void**)&g_io_channel_win32_new_fd, "g_io_channel_win32_new_fd");
				bindFunc(cast(void**)&g_io_channel_win32_new_messages, "g_io_channel_win32_new_messages");
				bindFunc(cast(void**)&g_io_channel_win32_new_socket, "g_io_channel_win32_new_socket");
				bindFunc(cast(void**)&g_io_channel_win32_poll, "g_io_channel_win32_poll");
		}
	}
}

__gshared DerelictGlibLoader DerelictGlib;

shared static this() 
{
	DerelictGlib = new DerelictGlibLoader();
}
