/*

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/ 

module derelict.glib.gpattern;

import derelict.glib.gtypes;
import derelict.glib.glibconfig;

extern (C):

alias _GPatternSpec GPatternSpec;

struct _GPatternSpec;


alias da_g_pattern_spec_new = GPatternSpec* function(const(gchar)* pattern);																																																						/* da_g_pattern_spec_new g_pattern_spec_new; */
alias da_g_pattern_spec_free = void function(GPatternSpec* pspec);																																																						/* da_g_pattern_spec_free g_pattern_spec_free; */
alias da_g_pattern_spec_equal = gboolean function(GPatternSpec* pspec1, GPatternSpec* pspec2);																																																						/* da_g_pattern_spec_equal g_pattern_spec_equal; */
alias da_g_pattern_match = gboolean function(GPatternSpec* pspec, guint string_length, const(gchar)* string, const(gchar)* string_reversed);																																																						/* da_g_pattern_match g_pattern_match; */
alias da_g_pattern_match_string = gboolean function(GPatternSpec* pspec, const(gchar)* string);																																																						/* da_g_pattern_match_string g_pattern_match_string; */
alias da_g_pattern_match_simple = gboolean function(const(gchar)* pattern, const(gchar)* string);																																																						/* da_g_pattern_match_simple g_pattern_match_simple; */


extern( C ) nothrow 
{
	
}

__gshared
{
	
}