/*

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/ 

module derelict.purple.mediamanager;

import derelict.glib.gtypes;
import derelict.glib.glibconfig;
import derelict.glib.glist;
import derelict.purple.media;
import derelict.purple.account;
import derelict.purple.enum_types;

extern (C):

alias _PurpleMediaManager PurpleMediaManager;
alias _PurpleMediaManagerClass PurpleMediaManagerClass;

struct _PurpleMediaManager;


struct _PurpleMediaManagerClass;																											


extern( C ) nothrow 
{
	alias da_purple_media_manager_get_type = GType function();																																					
    alias da_purple_media_manager_get = PurpleMediaManager* function();																																			
    alias da_purple_media_manager_create_media = PurpleMedia* function(PurpleMediaManager* manager, PurpleAccount* account, const(char)* conference_type, const(char)* remote_user, gboolean initiator);		
    alias da_purple_media_manager_get_media = GList* function(PurpleMediaManager* manager);																														
    alias da_purple_media_manager_get_media_by_account = GList* function(PurpleMediaManager* manager, PurpleAccount* account);																					
    alias da_purple_media_manager_remove_media = void function(PurpleMediaManager* manager, PurpleMedia* media);																								
    alias da_purple_media_manager_create_output_window = gboolean function(PurpleMediaManager* manager, PurpleMedia* media, const(gchar)* session_id, const(gchar)* participant);								
    alias da_purple_media_manager_set_output_window = gulong function(PurpleMediaManager* manager, PurpleMedia* media, const(gchar)* session_id, const(gchar)* participant, gulong window_id);					
    alias da_purple_media_manager_remove_output_window = gboolean function(PurpleMediaManager* manager, gulong output_window_id);																				
    alias da_purple_media_manager_remove_output_windows = void function(PurpleMediaManager* manager, PurpleMedia* media, const(gchar)* session_id, const(gchar)* participant);									
    alias da_purple_media_manager_set_ui_caps = void function(PurpleMediaManager* manager, PurpleMediaCaps caps);																								
    alias da_purple_media_manager_get_ui_caps = PurpleMediaCaps function(PurpleMediaManager* manager);																											
    alias da_purple_media_manager_set_backend_type = void function(PurpleMediaManager* manager, GType backend_type);																							
    alias da_purple_media_manager_get_backend_type = GType function(PurpleMediaManager* manager);	
}

__gshared
{
	da_purple_media_manager_get_type purple_media_manager_get_type;
	da_purple_media_manager_get purple_media_manager_get;
	da_purple_media_manager_create_media purple_media_manager_create_media;
	da_purple_media_manager_get_media purple_media_manager_get_media;
	da_purple_media_manager_get_media_by_account purple_media_manager_get_media_by_account;
	da_purple_media_manager_remove_media purple_media_manager_remove_media;
	da_purple_media_manager_create_output_window purple_media_manager_create_output_window;
	da_purple_media_manager_set_output_window purple_media_manager_set_output_window;
	da_purple_media_manager_remove_output_window purple_media_manager_remove_output_window;
	da_purple_media_manager_remove_output_windows purple_media_manager_remove_output_windows;
	da_purple_media_manager_set_ui_caps purple_media_manager_set_ui_caps;
	da_purple_media_manager_get_ui_caps purple_media_manager_get_ui_caps;
	da_purple_media_manager_set_backend_type purple_media_manager_set_backend_type;
	da_purple_media_manager_get_backend_type purple_media_manager_get_backend_type;
}