/*

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/ 

module derelict.purple.imgstore;

import derelict.glib.gtypes;
import derelict.glib.glibconfig;

extern (C):

alias _PurpleStoredImage PurpleStoredImage;

struct _PurpleStoredImage;

extern( C ) nothrow 
{
    alias da_purple_imgstore_add = PurpleStoredImage* function(gpointer data, size_t size, const(char)* filename);		
    alias da_purple_imgstore_new_from_file = PurpleStoredImage* function(const(char)* path);							
    alias da_purple_imgstore_add_with_id = int function(gpointer data, size_t size, const(char)* filename);				
    alias da_purple_imgstore_find_by_id = PurpleStoredImage* function(int id);											
    alias da_purple_imgstore_get_data = gconstpointer function(PurpleStoredImage* img);									
    alias da_purple_imgstore_get_size = size_t function(PurpleStoredImage* img);										
    alias da_purple_imgstore_get_filename = const(char)* function(const(PurpleStoredImage)* img);						
    alias da_purple_imgstore_get_extension = const(char)* function(PurpleStoredImage* img);								
    alias da_purple_imgstore_ref = PurpleStoredImage* function(PurpleStoredImage* img);									
    alias da_purple_imgstore_unref = PurpleStoredImage* function(PurpleStoredImage* img);								
    alias da_purple_imgstore_ref_by_id = void function(int id);															
    alias da_purple_imgstore_unref_by_id = void function(int id);														
    alias da_purple_imgstore_get_handle = void* function();																
    alias da_purple_imgstore_init = void function();																	
    alias da_purple_imgstore_uninit = void function();																	
}

__gshared
{
	da_purple_imgstore_add purple_imgstore_add;
	da_purple_imgstore_new_from_file purple_imgstore_new_from_file;
	da_purple_imgstore_add_with_id purple_imgstore_add_with_id;
	da_purple_imgstore_find_by_id purple_imgstore_find_by_id;
	da_purple_imgstore_get_data purple_imgstore_get_data;
	da_purple_imgstore_get_size purple_imgstore_get_size;
	da_purple_imgstore_get_filename purple_imgstore_get_filename;
	da_purple_imgstore_get_extension purple_imgstore_get_extension;
	da_purple_imgstore_ref purple_imgstore_ref;
	da_purple_imgstore_unref purple_imgstore_unref;
	da_purple_imgstore_ref_by_id purple_imgstore_ref_by_id;
	da_purple_imgstore_unref_by_id purple_imgstore_unref_by_id;
	da_purple_imgstore_get_handle purple_imgstore_get_handle;
	da_purple_imgstore_init purple_imgstore_init;
	da_purple_imgstore_uninit purple_imgstore_uninit;

}