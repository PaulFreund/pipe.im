/*

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/ 

module derelict.purple.server;

import derelict.glib.gtypes;
import derelict.glib.glibconfig;
import derelict.glib.ghash;
import derelict.purple.blist;
import derelict.purple.connection;
import derelict.purple.conversation;
import derelict.purple.prpl;
import derelict.purple.account;
import core.stdc.time;

extern (C):


extern( C ) nothrow 
{
    alias da_serv_send_typing = uint function(PurpleConnection* gc, const(char)* name, PurpleTypingState state);												
    alias da_serv_move_buddy = void function(PurpleBuddy*, PurpleGroup*, PurpleGroup*);																			
    alias da_serv_send_im = int function(PurpleConnection*, const(char)*, const(char)*, PurpleMessageFlags flags);												
    alias da_purple_get_attention_type_from_code = PurpleAttentionType* function(PurpleAccount* account, guint type_code);										
    alias da_serv_send_attention = void function(PurpleConnection* gc, const(char)* who, guint type_code);														
    alias da_serv_got_attention = void function(PurpleConnection* gc, const(char)* who, guint type_code);														
    alias da_serv_get_info = void function(PurpleConnection*, const(char)*);																					
    alias da_serv_set_info = void function(PurpleConnection*, const(char)*);																					
    alias da_serv_add_permit = void function(PurpleConnection*, const(char)*);																					
    alias da_serv_add_deny = void function(PurpleConnection*, const(char)*);																					
    alias da_serv_rem_permit = void function(PurpleConnection*, const(char)*);																					
    alias da_serv_rem_deny = void function(PurpleConnection*, const(char)*);																					
    alias da_serv_set_permit_deny = void function(PurpleConnection*);																							
    alias da_serv_chat_invite = void function(PurpleConnection*, int, const(char)*, const(char)*);																
    alias da_serv_chat_leave = void function(PurpleConnection*, int);																							
    alias da_serv_chat_whisper = void function(PurpleConnection*, int, const(char)*, const(char)*);																
    alias da_serv_chat_send = int function(PurpleConnection*, int, const(char)*, PurpleMessageFlags flags);														
    alias da_serv_alias_buddy = void function(PurpleBuddy*);																									
    alias da_serv_got_alias = void function(PurpleConnection* gc, const(char)* who, const(char)* alias_);														
    alias da_purple_serv_got_private_alias = void function(PurpleConnection* gc, const(char)* who, const(char)* alias_);										
    alias da_serv_got_typing = void function(PurpleConnection* gc, const(char)* name, int timeout, PurpleTypingState state);									
    alias da_serv_got_typing_stopped = void function(PurpleConnection* gc, const(char)* name);																	
    alias da_serv_got_im = void function(PurpleConnection* gc, const(char)* who, const(char)* msg, PurpleMessageFlags flags, time_t mtime);						
    alias da_serv_join_chat = void function(PurpleConnection*, GHashTable* data);																				
    alias da_serv_reject_chat = void function(PurpleConnection*, GHashTable* data);																				
    alias da_serv_got_chat_invite = void function(PurpleConnection* gc, const(char)* name, const(char)* who, const(char)* message, GHashTable* data);			
    alias da_serv_got_joined_chat = PurpleConversation* function(PurpleConnection* gc, int id, const(char)* name);												
    alias da_purple_serv_got_join_chat_failed = void function(PurpleConnection* gc, GHashTable* data);															
    alias da_serv_got_chat_left = void function(PurpleConnection* g, int id);																					
    alias da_serv_got_chat_in = void function(PurpleConnection* g, int id, const(char)* who, PurpleMessageFlags flags, const(char)* message, time_t mtime);		
    alias da_serv_send_file = void function(PurpleConnection* gc, const(char)* who, const(char)* file);		
}

__gshared
{
	da_serv_send_typing serv_send_typing;
	da_serv_move_buddy serv_move_buddy;
	da_serv_send_im serv_send_im;
	da_purple_get_attention_type_from_code purple_get_attention_type_from_code;
	da_serv_send_attention serv_send_attention;
	da_serv_got_attention serv_got_attention;
	da_serv_get_info serv_get_info;
	da_serv_set_info serv_set_info;
	da_serv_add_permit serv_add_permit;
	da_serv_add_deny serv_add_deny;
	da_serv_rem_permit serv_rem_permit;
	da_serv_rem_deny serv_rem_deny;
	da_serv_set_permit_deny serv_set_permit_deny;
	da_serv_chat_invite serv_chat_invite;
	da_serv_chat_leave serv_chat_leave;
	da_serv_chat_whisper serv_chat_whisper;
	da_serv_chat_send serv_chat_send;
	da_serv_alias_buddy serv_alias_buddy;
	da_serv_got_alias serv_got_alias;
	da_purple_serv_got_private_alias purple_serv_got_private_alias;
	da_serv_got_typing serv_got_typing;
	da_serv_got_typing_stopped serv_got_typing_stopped;
	da_serv_got_im serv_got_im;
	da_serv_join_chat serv_join_chat;
	da_serv_reject_chat serv_reject_chat;
	da_serv_got_chat_invite serv_got_chat_invite;
	da_serv_got_joined_chat serv_got_joined_chat;
	da_purple_serv_got_join_chat_failed purple_serv_got_join_chat_failed;
	da_serv_got_chat_left serv_got_chat_left;
	da_serv_got_chat_in serv_got_chat_in;
	da_serv_send_file serv_send_file;
}